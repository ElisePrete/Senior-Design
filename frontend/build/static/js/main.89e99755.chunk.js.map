{"version":3,"sources":["model/actionTypes.js","model/actions.js","Crud.js","App.js","reportWebVitals.js","model/reducer.js","model/rootReducer.js","model/store.js","index.js"],"names":["GET_OBJS","getObjs","objs","type","types","payload","Crud","dispatch","useDispatch","useSelector","state","data","useEffect","axios","get","then","resp","catch","err","console","log","Navbar","bg","variant","className","style","color","Container","Row","Col","nd","Table","bordered","hover","map","item","index","question","answer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","obj","msg","objReducer","action","rootReducer","combineReducers","middleware","thunk","push","logger","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAaA,EAAW,W,iBCOlBC,EAAU,SAACC,GAAD,MACZ,CACAC,KAAMC,EACNC,QAAQH,I,+CCiCGI,MAvCf,WACI,IAAMC,EAAWC,cACVN,EAAQO,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCT,KAIP,OAHAU,qBAAU,WACNL,GDcG,SAASA,GACZM,IAAMC,IAAN,iBACCC,MAAK,SAACC,GAAD,OAAWT,EAASN,EAAQe,EAAKL,UACtCM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,WChBvC,IAEC,qCAAE,cAACG,EAAA,EAAD,CAAQC,GAAG,UAAUC,QAAQ,QAAQC,UAAU,yBAA/C,SACE,oBAAIC,MAAO,CAAEC,MAAO,QAApB,wBACK,cAACC,EAAA,EAAD,UACD,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACC,EAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAArB,UACI,gCACA,+BACI,mCACA,0CACA,6CAGH/B,GAAQA,EAAKgC,KAAI,SAACC,EAAKC,GAAN,OACd,gCACI,+BACI,6BAAKA,EAAM,IACX,6BAAKD,EAAKE,WACV,6BAAKF,EAAKG,aAJNF,mB,yBCX7BG,MATf,WACE,OACE,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,QCGSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wCCLRO,EAAe,CACjB9C,KAAK,GACL+C,IAAK,GACLC,IAAK,IAcMC,EAZI,WAAmC,IAAlCzC,EAAiC,uDAAzBsC,EAAcI,EAAW,uCACjD,OAAOA,EAAOjD,OACLC,EACM,2BACAM,GADP,IAEIR,KAAMkD,EAAO/C,UAGVK,GCZb2C,EAAcC,YAAiB,CACjC3C,KAAMwC,IAGKE,IAEflC,QAAQC,IAAI,iCAAiCiC,GCJ7C,IAAME,EAAa,CAACC,KAGhBD,EAAWE,KAAKC,KAGpB,IAEeC,EAFDC,YAAYP,EAAaQ,IAAe,WAAf,EAAmBN,ICH1DO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.89e99755.chunk.js","sourcesContent":["export const GET_OBJS = \"GET_OBJS\";\nexport const ADD_OBJ = \"ADD_OBJ\";\nexport const DELETE_OBJ = \"DELETE_OBJ\";\nexport const UPDATE_OBJ = \"UPDATE_OBJ\";\nexport const GET_SINGLE_OBJ = \"GET_SINGLE_OBJ\";\n","import * as types from \"./actionTypes\"\nimport axios from \"axios\";\n//axios allows a user to make http request through their browser\n//const API = window.location.host //\"http://127.0.0.1:5000\"\n//talk to model through functions on this page\n\n\nconst getObjs = (objs) => (\n    {\n    type: types.GET_OBJS,\n    payload:objs\n});\n\n\nexport const loadQuestions = () => {\n    return function(dispatch) {\n        axios.get(`/api/Questions`)\n        .then((resp) =>  dispatch(getObjs(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\nexport const loadQuestion = () => {\n    return function(dispatch) {\n        axios.get(`/api/Question`)\n        .then((resp) =>  dispatch(getObjs(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\n/*\nexport const loadDocuments = () => {\n    return function(dispatch) {\n        axios.get(`${API}/api/Documents`)\n        .then((resp) =>  dispatch(getObjs(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\n\n\nexport const loadSummaries = () => {\n    return function(dispatch) {\n        axios.get(`${API}/api/Summaries`)\n        .then((resp) =>  dispatch(getObjs(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}*/\n\n//NOTE: above functions were used for demo (recyclable)\n\n","import React, {useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loadQuestion,loadQuestions } from './model/actions';\nimport {Navbar, Table, Container, Row, Col, Button, ButtonGroup, Form} from \"react-bootstrap\"\nfunction Crud() {\n    const dispatch = useDispatch();\n    const {objs} = useSelector(state => state.data)\n    useEffect(() => {\n        dispatch(loadQuestion());\n    }, [])\n    return (\n        <><Navbar bg=\"primary\" variant=\"light\" className=\"justify-content-center\">\n            <h1 style={{ color: \"pink\" }}> D.Find </h1>\n        </Navbar><Container>\n                <Row>\n                    <Col nd={8}>\n                        <Table bordered hover>\n                            <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Question</th>\n                                <th>Answer</th>\n                            </tr>\n                            </thead>\n                            {objs && objs.map((item,index) => (\n                                <tbody key={index}>\n                                    <tr>\n                                        <td>{index+1}</td>\n                                        <td>{item.question}</td>\n                                        <td>{item.answer}</td>\n                                    </tr>\n                                    </tbody>\n                            ))}\n                        </Table>\n                    </Col>\n\n                </Row>\n            </Container>\n        </>\n\n    )\n}\n\nexport default Crud\n","import './App.css';\nimport Crud from './Crud.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CBot from './components/Chatbot/Chatbot';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Crud/>\n      <CBot/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"./actionTypes\"\n\nconst initialState = {\n    objs:[],\n    obj: {},\n    msg: \"\"\n}\nconst objReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case types.GET_OBJS: \n            return {\n                ...state,\n                objs: action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default objReducer;","import {combineReducers} from \"redux\";\nimport objReducer from \"./reducer\"\n\nconst rootReducer = combineReducers( {\n    data: objReducer\n});\n\nexport default rootReducer;\n\nconsole.log(\"rootReducer | rootReducer: %s \",rootReducer);","import {createStore,applyMiddleware} from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\n\nconst middleware = [thunk];\n\nif(true) {\n    middleware.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware))\n\nexport default store;\n\n//console.log(\"Store | middleware: %s - store: %s\",middleware,store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./model/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}