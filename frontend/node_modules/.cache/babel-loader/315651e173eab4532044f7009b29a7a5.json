{"ast":null,"code":"import { useSelector } from 'react-redux';\nimport React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport \"./DocTable.css\";\nimport { Link } from \"react-router-dom\";\n/*function DocTable() {\n    var state = {\n        offset:0,\n        data:[],\n        perPage:10,\n        currentPage:0\n    };\n    var {docs} = useSelector(state => state.data) \n    \n    function handlePageClick(page) {\n        const selectedPage = page.selected;\n        const offset = selectedPage * state.perPage\n\n        setState({\n            currentPage: selectedPage,\n            offset:offset\n        }, () =>{\n            recievedData(docs)\n        });\n    }\n\n    return(\n        <div>\n            {state.postData}\n            <ReactPaginate\n                previousLabel={\"prev\"}\n                nextLabel={\"next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={state.pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                activeClassName={\"active\"}/>\n        </div>)\n    }\n    \n\n\n\nfunction recievedData(data) {\n    const slice = data.slice(state.offset, state.offset + state.perPage)\n    const postData = slice.map(doc => \n        <React.Fragment>\n\n            <Link to={`document/${doc._id}`} state={{docSummary:doc.summary}}>\n                <h4>doc._id</h4>\n            </Link>\n            <p>doc.tags</p>\n        </React.Fragment>)\n    setState({\n        pageCount:Math.ceil(data.length / state.perPage),\n        postData\n    })\n\n}\nexport default DocTable;\n\n*/\n\n/*import {docs} from \"../../model/reducer\"\nimport React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport \"./DocTable.css\"\n\n\nclass DocTable extends Component {\n    constructor(props) {\n        super(props);\n        state = {\n            offset:0,\n            data:[],\n            perPage:10,\n            currentPage:0\n        };\n    }\n    \n    recievedData = () =>{\n        var {docs} = useSelector(state => state.data) \n        const slice = data.slice(state.offset, state.offset + state.perPage)\n        const postData = slice.map(doc => \n            <React.Fragment>\n\n                <Link to={`document/${docs[doc]._id}`} state={{docSummary:docs[doc].summary}}>\n                    <h4>doc._id</h4>\n                </Link>\n                <p>doc.tags</p>\n            </React.Fragment>)\n        setState({\n            pageCount:Math.ceil(docs.length / state.perPage),\n            postData\n        })\n    }\n\n    handlePageClick = (page) => {\n        const selectedPage = page.selected;\n        const offset = selectedPage * state.perPage\n\n        setState({\n            currentPage: selectedPage,\n            offset:offset\n        }, () =>{\n            recievedData()\n        });\n    }\n\n    render() {\n        <div>\n            {state.postData}\n            <ReactPaginate\n                previousLabel={\"prev\"}\n                nextLabel={\"next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={state.pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                activeClassName={\"active\"}/>\n        </div>\n    }\n    \n}\n\nexport default DocTable;\n\n*/","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocTable/DocTable.js"],"names":["useSelector","React","ReactPaginate","Link"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,gBAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnsourcesContent":["import { useSelector } from 'react-redux'\nimport React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport \"./DocTable.css\"\nimport {Link} from \"react-router-dom\";\n/*function DocTable() {\n    var state = {\n        offset:0,\n        data:[],\n        perPage:10,\n        currentPage:0\n    };\n    var {docs} = useSelector(state => state.data) \n    \n    function handlePageClick(page) {\n        const selectedPage = page.selected;\n        const offset = selectedPage * state.perPage\n\n        setState({\n            currentPage: selectedPage,\n            offset:offset\n        }, () =>{\n            recievedData(docs)\n        });\n    }\n\n    return(\n        <div>\n            {state.postData}\n            <ReactPaginate\n                previousLabel={\"prev\"}\n                nextLabel={\"next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={state.pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                activeClassName={\"active\"}/>\n        </div>)\n    }\n    \n\n\n\nfunction recievedData(data) {\n    const slice = data.slice(state.offset, state.offset + state.perPage)\n    const postData = slice.map(doc => \n        <React.Fragment>\n\n            <Link to={`document/${doc._id}`} state={{docSummary:doc.summary}}>\n                <h4>doc._id</h4>\n            </Link>\n            <p>doc.tags</p>\n        </React.Fragment>)\n    setState({\n        pageCount:Math.ceil(data.length / state.perPage),\n        postData\n    })\n\n}\nexport default DocTable;\n\n*/\n/*import {docs} from \"../../model/reducer\"\nimport React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport \"./DocTable.css\"\n\n\nclass DocTable extends Component {\n    constructor(props) {\n        super(props);\n        state = {\n            offset:0,\n            data:[],\n            perPage:10,\n            currentPage:0\n        };\n    }\n    \n    recievedData = () =>{\n        var {docs} = useSelector(state => state.data) \n        const slice = data.slice(state.offset, state.offset + state.perPage)\n        const postData = slice.map(doc => \n            <React.Fragment>\n\n                <Link to={`document/${docs[doc]._id}`} state={{docSummary:docs[doc].summary}}>\n                    <h4>doc._id</h4>\n                </Link>\n                <p>doc.tags</p>\n            </React.Fragment>)\n        setState({\n            pageCount:Math.ceil(docs.length / state.perPage),\n            postData\n        })\n    }\n\n    handlePageClick = (page) => {\n        const selectedPage = page.selected;\n        const offset = selectedPage * state.perPage\n\n        setState({\n            currentPage: selectedPage,\n            offset:offset\n        }, () =>{\n            recievedData()\n        });\n    }\n\n    render() {\n        <div>\n            {state.postData}\n            <ReactPaginate\n                previousLabel={\"prev\"}\n                nextLabel={\"next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={state.pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                activeClassName={\"active\"}/>\n        </div>\n    }\n    \n}\n\nexport default DocTable;\n\n*/"]},"metadata":{},"sourceType":"module"}