{"ast":null,"code":"import _slicedToArray from\"/home/lizz/spring2022/dfind/Senior-Design/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./Chatbot.css';import React,{useState}from\"react\";import Chatbot from\"react-chatbot-kit\";import'react-chatbot-kit/build/main.css';import config from\"./chatbotConfig\";import MessageParser from\"./MessageParser\";import ActionProvider from\"./ActionProvider\";import Rephrase from\"./Rephrase\";/*Chatbot UI component*/import{jsx as _jsx}from\"react/jsx-runtime\";function CBot(){//const [showBot, toggleBot] = useState(false);\nvar chat_messages=[];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showBot=_useState2[0],toggleBot=_useState2[1];// const [botHTML, setHTML] = useState({})\nfunction delay(time){return new Promise(function(resolve){return setTimeout(resolve,time);});}/* async function saveMessages(messages, tmlS)  {\n    console.log(\"messages:\", messages, \"tml:\", tmlS)\n    await delay(1000);\n    const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n    if (html[0] == undefined) { console.log(\"bouncinsm,\", html); return}\n    console.log(\"saved:\",html[0])\n    localStorage.setItem('chat_messages', html[0].innerHTML)\n  };\n  async function loadMessages() {\n   // await delay(1000);\n    const parsed = localStorage.getItem('chat_messages')\n    console.log(\"in storage:\", parsed)\n    const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n    if (html[0] == undefined) {\n      console.log(\"h LM:\",html)\n      return parsed\n    }\n    //document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")[0].innerHTML = parsed\n    return parsed\n  };*/function saveMessages(messages,HTMLString){//var messages = \"m\" ; var HTMLString = \"\"\nconsole.log(\"SM mess:\",messages,\"html:\",HTMLString);localStorage.setItem('chat_messages',HTMLString[0].innerHTML);};var loadMessages=function loadMessages(){var messages=localStorage.getItem('chat_messages');if(messages==null){return;}console.log(\"LM mess:\",messages);// document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\").innerHTML = messages[0].innerHTML\nreturn messages;};return/*#__PURE__*/_jsx(\"div\",{className:\"CBot\",children:true&&/*#__PURE__*/_jsx(Chatbot,{headerText:\" \",config:config,actionProvider:ActionProvider//messageHistory={loadMessages()}\n,messageParser:MessageParser//saveMessages={saveMessages}  //<button onClick={() => toggleBot((prev) => !prev)}>Bot</button>\n//runInitialMessagesWithHistory={true}\n})});}export default CBot;","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/Chatbot.js"],"names":["React","useState","Chatbot","config","MessageParser","ActionProvider","Rephrase","CBot","chat_messages","showBot","toggleBot","delay","time","Promise","resolve","setTimeout","saveMessages","messages","HTMLString","console","log","localStorage","setItem","innerHTML","loadMessages","getItem"],"mappings":"qIAAA,MAAO,eAAP,CACA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAO,kCAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,wB,2CACA,QAASC,CAAAA,IAAT,EAAgB,CACd;AACA,GAAIC,CAAAA,aAAa,CAAG,EAApB,CACA,cAA6BP,QAAQ,CAAC,KAAD,CAArC,wCAAOQ,OAAP,eAAgBC,SAAhB,eACD;AACC,QAASC,CAAAA,KAAT,CAAeC,IAAf,CAAqB,CACnB,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAAAC,OAAO,QAAIC,CAAAA,UAAU,CAACD,OAAD,CAAUF,IAAV,CAAd,EAAnB,CAAP,CACD,CACF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MACE,QAASI,CAAAA,YAAT,CAAsBC,QAAtB,CAAgCC,UAAhC,CAA4C,CAC1C;AACAC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAuBH,QAAvB,CAAgC,OAAhC,CAAyCC,UAAzC,EAEAG,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAsCJ,UAAU,CAAC,CAAD,CAAV,CAAcK,SAApD,EACD,EACD,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMP,CAAAA,QAAQ,CAAGI,YAAY,CAACI,OAAb,CAAqB,eAArB,CAAjB,CACA,GAAIR,QAAQ,EAAI,IAAhB,CAAsB,CACpB,OACD,CACDE,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAuBH,QAAvB,EACD;AACC,MAAOA,CAAAA,QAAP,CAAmB,CAPrB,CAQA,mBACE,YAAM,SAAS,CAAC,MAAhB,UACE,mBAAS,KAAC,OAAD,EACV,UAAU,CAAC,GADD,CAER,MAAM,CAAEd,MAFA,CAGR,cAAc,CAAEE,cAChB;AAJQ,CAKR,aAAa,CAAED,aACf;AACA;AAPQ,EADX,EADF,CAcD,CAGD,cAAeG,CAAAA,IAAf","sourcesContent":["import './Chatbot.css'\nimport React, {useState} from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\nimport 'react-chatbot-kit/build/main.css'\nimport config from \"./chatbotConfig\";\nimport MessageParser from \"./MessageParser\"\nimport ActionProvider from \"./ActionProvider\";\nimport Rephrase from \"./Rephrase\"\n/*Chatbot UI component*/\nfunction CBot() {\n  //const [showBot, toggleBot] = useState(false);\n  var chat_messages = []\n  const [showBot, toggleBot] = useState(false);\n // const [botHTML, setHTML] = useState({})\n  function delay(time) {\n    return new Promise(resolve => setTimeout(resolve, time));\n  }\n /* async function saveMessages(messages, tmlS)  {\n    console.log(\"messages:\", messages, \"tml:\", tmlS)\n    await delay(1000);\n    const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n    if (html[0] == undefined) { console.log(\"bouncinsm,\", html); return}\n    console.log(\"saved:\",html[0])\n    localStorage.setItem('chat_messages', html[0].innerHTML)\n  };\n  async function loadMessages() {\n   // await delay(1000);\n    const parsed = localStorage.getItem('chat_messages')\n    console.log(\"in storage:\", parsed)\n    const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n    if (html[0] == undefined) {\n      console.log(\"h LM:\",html)\n      return parsed\n    }\n    //document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")[0].innerHTML = parsed\n    return parsed\n  };*/\n  function saveMessages(messages, HTMLString) {\n    //var messages = \"m\" ; var HTMLString = \"\"\n    console.log(\"SM mess:\",messages,\"html:\", HTMLString); \n   \n    localStorage.setItem('chat_messages', HTMLString[0].innerHTML);\n  };\n  const loadMessages = () => {\n    const messages = localStorage.getItem('chat_messages')\n    if (messages == null) {\n      return\n    }\n    console.log(\"LM mess:\",messages);\n   // document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\").innerHTML = messages[0].innerHTML\n    return messages;  };\n  return (\n    <div  className=\"CBot\">\n     {true && (<Chatbot\n     headerText=' '\n       config={config}\n       actionProvider={ActionProvider}\n       //messageHistory={loadMessages()}\n       messageParser={MessageParser}\n       //saveMessages={saveMessages}  //<button onClick={() => toggleBot((prev) => !prev)}>Bot</button>\n       //runInitialMessagesWithHistory={true}\n      />)}\n      \n    </div>\n  );\n}\n\n\nexport default CBot;"]},"metadata":{},"sourceType":"module"}