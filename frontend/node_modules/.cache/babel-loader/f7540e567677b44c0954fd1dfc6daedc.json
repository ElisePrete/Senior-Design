{"ast":null,"code":"import * as types from \"./actionTypes\";\nimport axios from \"axios\"; //axios allows a user to make http request through their browser\n\nvar API = window.location.host; //\"http://127.0.0.1:5000\"\n//talk to model through functions on this page\n//for local or remote differentiation\n\nconsole.log(\"API:\", API);\n\nif (API == 'localhost:3000') {\n  API = 'http://127.0.0.1:5000';\n} else {\n  API = '';\n}\n/*\n*** to connect a new api call: ***\n--make a unique action type in actionTypes\n--make a sister function utilizing that actionType here\n--develop a case for that actionType in reducer */\n\n\nconst getQuestions = objs => ({\n  type: types.GET_QS,\n  payload: objs\n});\n\nconst getQuestion = objs => ({\n  type: types.GET_SINGLE_Q,\n  payload: objs\n});\n\nexport const loadQuestions = () => {\n  return function (dispatch) {\n    axios.get(`${API}/api/Questions`).then(resp => dispatch(getQuestions(resp.data))).catch(err => console.log(\"error:\", err));\n  };\n};\nexport const loadQuestion = question => {\n  console.log(\"in loadquestion:\", question);\n  return function (dispatch) {\n    axios.get(`${API}/api/Question`, {\n      params: {\n        input: question\n      }\n    }).then(resp => dispatch(getQuestion(resp.data))).catch(err => console.log(\"error:\", err));\n  };\n};","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/actions.js"],"names":["types","axios","API","window","location","host","console","log","getQuestions","objs","type","GET_QS","payload","getQuestion","GET_SINGLE_Q","loadQuestions","dispatch","get","then","resp","data","catch","err","loadQuestion","question","params","input"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,IAAIC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA1B,C,CAA+B;AAC/B;AAEA;;AACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBL,GAAnB;;AACA,IAAIA,GAAG,IAAI,gBAAX,EAA6B;AACzBA,EAAAA,GAAG,GAAG,uBAAN;AACH,CAFD,MAGK;AACDA,EAAAA,GAAG,GAAG,EAAN;AACH;AAED;AACA;AACA;AACA;AACA;;;AAEA,MAAMM,YAAY,GAAIC,IAAD,KACjB;AACAC,EAAAA,IAAI,EAAEV,KAAK,CAACW,MADZ;AAEAC,EAAAA,OAAO,EAACH;AAFR,CADiB,CAArB;;AAMA,MAAMI,WAAW,GAAIJ,IAAD,KAChB;AACAC,EAAAA,IAAI,EAAEV,KAAK,CAACc,YADZ;AAEAF,EAAAA,OAAO,EAACH;AAFR,CADgB,CAApB;;AAMA,OAAO,MAAMM,aAAa,GAAG,MAAM;AAC/B,SAAO,UAASC,QAAT,EAAmB;AACtBf,IAAAA,KAAK,CAACgB,GAAN,CAAW,GAAEf,GAAI,gBAAjB,EACCgB,IADD,CACOC,IAAD,IAAWH,QAAQ,CAACR,YAAY,CAACW,IAAI,CAACC,IAAN,CAAb,CADzB,EAECC,KAFD,CAEQC,GAAD,IAAShB,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBe,GAAtB,CAFhB;AAGF,GAJF;AAKH,CANM;AAOP,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc;AACtClB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCiB,QAAhC;AACA,SAAO,UAASR,QAAT,EAAmB;AACtBf,IAAAA,KAAK,CAACgB,GAAN,CAAW,GAAEf,GAAI,eAAjB,EAAiC;AAACuB,MAAAA,MAAM,EAAC;AAACC,QAAAA,KAAK,EAACF;AAAP;AAAR,KAAjC,EACCN,IADD,CACOC,IAAD,IAAWH,QAAQ,CAACH,WAAW,CAACM,IAAI,CAACC,IAAN,CAAZ,CADzB,EAECC,KAFD,CAEQC,GAAD,IAAShB,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBe,GAAtB,CAFhB;AAGF,GAJF;AAKH,CAPM","sourcesContent":["import * as types from \"./actionTypes\"\nimport axios from \"axios\";\n//axios allows a user to make http request through their browser\nvar API = window.location.host //\"http://127.0.0.1:5000\"\n//talk to model through functions on this page\n\n//for local or remote differentiation\nconsole.log(\"API:\",API)\nif (API == 'localhost:3000') {\n    API = 'http://127.0.0.1:5000'\n}\nelse {\n    API = ''\n}\n\n/*\n*** to connect a new api call: ***\n--make a unique action type in actionTypes\n--make a sister function utilizing that actionType here\n--develop a case for that actionType in reducer */\n\nconst getQuestions = (objs) => (\n    {\n    type: types.GET_QS,\n    payload:objs\n});\n\nconst getQuestion = (objs) => (\n    {\n    type: types.GET_SINGLE_Q,\n    payload:objs\n});\n\nexport const loadQuestions = () => {\n    return function(dispatch) {\n        axios.get(`${API}/api/Questions`)\n        .then((resp) =>  dispatch(getQuestions(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\nexport const loadQuestion = (question) => {\n    console.log(\"in loadquestion:\", question)\n    return function(dispatch) {\n        axios.get(`${API}/api/Question`, {params:{input:question}})\n        .then((resp) =>  dispatch(getQuestion(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}"]},"metadata":{},"sourceType":"module"}