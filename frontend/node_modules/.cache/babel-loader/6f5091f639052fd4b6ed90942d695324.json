{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocTable/DocTable.js\";\nimport { docs } from \"../../model/reducer\";\nimport React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport \"DocTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DocTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = page => {\n      const selectedPage = page.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => {\n        this.recievedData();\n      });\n    };\n\n    this.state = {\n      offset: 0,\n      data: [],\n      perPage: 10,\n      currentPage: 0\n    };\n  }\n\n  recievedData() {\n    var {\n      docs\n    } = useSelector(state => state.data);\n    const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage);\n    const postData = slice.map(doc => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `document/${docs[doc]._id}`,\n        state: {\n          docSummary: docs[doc].summary\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"doc._id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"doc.tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this));\n    this.setState({\n      pageCount: Math.ceil(docs.length / this.state.perPage),\n      postData\n    });\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [this.state.postData, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"prev\",\n        nextLabel: \"next\",\n        breakLabel: \"...\",\n        breakClassName: \"break-me\",\n        pageCount: this.state.pageCount,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 5,\n        onPageChange: this.handlePageClick,\n        containerClassName: \"pagination\",\n        activeClassName: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default DocTable;\n/*import { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\n///import {docs} from \"../../model/reducer\"\nimport \"./DocGrid.css\"\nimport { useSelector } from 'react-redux'\nimport {Link} from \"react-router-dom\";\n\nexport default function DGrid() {\n    var {docs} = useSelector(state => state.data)\n   // path = \"/document:\" + docs[doc]._id\n  return (\n    <div>\n        {docs && Object.keys(docs).map((doc,i) => (\n            \n            <Link to={`document/${docs[doc]._id}`} state={{docSummary:docs[doc].summary}}\n           /*to={`document/:${docs[doc]._id}`} \n           {{\n                pathname:\"document\",\n                state:\"lol\"\n            }}*/\n\n/* >\n<tbody key={i} >\n    <tr>\n        <td ><b>{docs[doc]._id}</b></td>\n        <td>{docs[doc].tags[0]}</td>\n    </tr>\n</tbody>\n</Link>))}\n</div>\n);\n} \n*/","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocTable/DocTable.js"],"names":["docs","React","Component","ReactPaginate","DocTable","constructor","props","handlePageClick","page","selectedPage","selected","offset","state","perPage","setState","currentPage","recievedData","data","useSelector","slice","postData","map","doc","_id","docSummary","summary","pageCount","Math","ceil","length","render"],"mappings":";AAAA,SAAQA,IAAR,QAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,cAAP;;;AACA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBC,eA3BmB,GA2BAC,IAAD,IAAU;AACxB,YAAMC,YAAY,GAAGD,IAAI,CAACE,QAA1B;AACA,YAAMC,MAAM,GAAGF,YAAY,GAAG,KAAKG,KAAL,CAAWC,OAAzC;AAEA,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAEN,YADH;AAEVE,QAAAA,MAAM,EAACA;AAFG,OAAd,EAGG,MAAK;AACJ,aAAKK,YAAL;AACH,OALD;AAMH,KArCkB;;AAEf,SAAKJ,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAC,CADE;AAETM,MAAAA,IAAI,EAAC,EAFI;AAGTJ,MAAAA,OAAO,EAAC,EAHC;AAITE,MAAAA,WAAW,EAAC;AAJH,KAAb;AAMH;;AAEDC,EAAAA,YAAY,GAAG;AACX,QAAI;AAAChB,MAAAA;AAAD,QAASkB,WAAW,CAACN,KAAK,IAAIA,KAAK,CAACK,IAAhB,CAAxB;AACA,UAAME,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAW,KAAKP,KAAL,CAAWD,MAAtB,EAA8B,KAAKC,KAAL,CAAWD,MAAX,GAAoB,KAAKC,KAAL,CAAWC,OAA7D,CAAd;AACA,UAAMO,QAAQ,GAAGD,KAAK,CAACE,GAAN,CAAUC,GAAG,iBAC1B,QAAC,KAAD,CAAO,QAAP;AAAA,8BAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,YAAWtB,IAAI,CAACsB,GAAD,CAAJ,CAAUC,GAAI,EAApC;AAAuC,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAACxB,IAAI,CAACsB,GAAD,CAAJ,CAAUG;AAAtB,SAA9C;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADa,CAAjB;AAQA,SAAKX,QAAL,CAAc;AACVY,MAAAA,SAAS,EAACC,IAAI,CAACC,IAAL,CAAU5B,IAAI,CAAC6B,MAAL,GAAc,KAAKjB,KAAL,CAAWC,OAAnC,CADA;AAEVO,MAAAA;AAFU,KAAd;AAIH;;AAcDU,EAAAA,MAAM,GAAG;AACL;AAAA;AAAA,iBACK,KAAKlB,KAAL,CAAWQ,QADhB,eAEI,QAAC,aAAD;AACI,QAAA,aAAa,EAAE,MADnB;AAEI,QAAA,SAAS,EAAE,MAFf;AAGI,QAAA,UAAU,EAAE,KAHhB;AAII,QAAA,cAAc,EAAE,UAJpB;AAKI,QAAA,SAAS,EAAE,KAAKR,KAAL,CAAWc,SAL1B;AAMI,QAAA,oBAAoB,EAAE,CAN1B;AAOI,QAAA,kBAAkB,EAAE,CAPxB;AAQI,QAAA,YAAY,EAAE,KAAKnB,eARvB;AASI,QAAA,kBAAkB,EAAE,YATxB;AAUI,QAAA,eAAe,EAAE;AAVrB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAcH;;AAvD4B;;AA2DjC,eAAeH,QAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {docs} from \"../../model/reducer\"\nimport React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport \"DocTable.css\"\nclass DocTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            offset:0,\n            data:[],\n            perPage:10,\n            currentPage:0\n        };\n    }\n    \n    recievedData() {\n        var {docs} = useSelector(state => state.data) \n        const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n        const postData = slice.map(doc => \n            <React.Fragment>\n\n                <Link to={`document/${docs[doc]._id}`} state={{docSummary:docs[doc].summary}}>\n                    <h4>doc._id</h4>\n                </Link>\n                <p>doc.tags</p>\n            </React.Fragment>)\n        this.setState({\n            pageCount:Math.ceil(docs.length / this.state.perPage),\n            postData\n        })\n    }\n\n    handlePageClick = (page) => {\n        const selectedPage = page.selected;\n        const offset = selectedPage * this.state.perPage\n\n        this.setState({\n            currentPage: selectedPage,\n            offset:offset\n        }, () =>{\n            this.recievedData()\n        });\n    }\n\n    render() {\n        <div>\n            {this.state.postData}\n            <ReactPaginate\n                previousLabel={\"prev\"}\n                nextLabel={\"next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={this.state.pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={this.handlePageClick}\n                containerClassName={\"pagination\"}\n                activeClassName={\"active\"}/>\n        </div>\n    }\n    \n}\n\nexport default DocTable;\n\n\n\n/*import { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\n///import {docs} from \"../../model/reducer\"\nimport \"./DocGrid.css\"\nimport { useSelector } from 'react-redux'\nimport {Link} from \"react-router-dom\";\n\nexport default function DGrid() {\n    var {docs} = useSelector(state => state.data)\n   // path = \"/document:\" + docs[doc]._id\n  return (\n    <div>\n        {docs && Object.keys(docs).map((doc,i) => (\n            \n            <Link to={`document/${docs[doc]._id}`} state={{docSummary:docs[doc].summary}}\n           /*to={`document/:${docs[doc]._id}`} \n           {{\n                pathname:\"document\",\n                state:\"lol\"\n            }}*//* >\n                <tbody key={i} >\n                    <tr>\n                        <td ><b>{docs[doc]._id}</b></td>\n                        <td>{docs[doc].tags[0]}</td>\n                    </tr>\n                </tbody>\n            </Link>))}\n    </div>\n  );\n} \n*/\n"]},"metadata":{},"sourceType":"module"}