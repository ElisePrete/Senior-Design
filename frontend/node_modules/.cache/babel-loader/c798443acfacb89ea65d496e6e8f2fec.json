{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/DocOptions/DocOptions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/* Chatbot Widget which appears after Document results are revealed. \nUsers can search for more docs or switch to document-independent questions*/\nconst DocOptions = props => {\n  var optionsM = [{\n    text: \"Ask Something else\",\n    handler: props.actionProvider.handleOtherSetup,\n    id: 1\n  }];\n  const buttonsMarkup = optionsM.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: option.handler,\n    className: \"option-button\",\n    children: option.text\n  }, option.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options-container\",\n    children: buttonsMarkup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n\n_c = DocOptions;\nexport default DocOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocOptions\");","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/DocOptions/DocOptions.js"],"names":["DocOptions","props","optionsM","text","handler","actionProvider","handleOtherSetup","id","buttonsMarkup","map","option"],"mappings":";;;AAAA;AACA;AACA,MAAMA,UAAU,GAAIC,KAAD,IAAW;AAC1B,MAAIC,QAAQ,GAAG,CACX;AACIC,IAAAA,IAAI,EAAC,oBADT;AAEIC,IAAAA,OAAO,EAACH,KAAK,CAACI,cAAN,CAAqBC,gBAFjC;AAGIC,IAAAA,EAAE,EAAC;AAHP,GADW,CAAf;AAOA,QAAMC,aAAa,GAAGN,QAAQ,CAACO,GAAT,CAAcC,MAAD,iBAC/B;AAAwB,IAAA,OAAO,EAAEA,MAAM,CAACN,OAAxC;AAAiD,IAAA,SAAS,EAAC,eAA3D;AAAA,cACKM,MAAM,CAACP;AADZ,KAAaO,MAAM,CAACH,EAApB;AAAA;AAAA;AAAA;AAAA,UADkB,CAAtB;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,cAAoCC;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAdD;;KAAMR,U;AAgBN,eAAeA,UAAf","sourcesContent":["/* Chatbot Widget which appears after Document results are revealed. \nUsers can search for more docs or switch to document-independent questions*/\nconst DocOptions = (props) => {\n    var optionsM = [\n        {\n            text:\"Ask Something else\",\n            handler:props.actionProvider.handleOtherSetup,\n            id:1\n        }\n    ];\n    const buttonsMarkup = optionsM.map((option) => (\n        <button key={option.id} onClick={option.handler} className=\"option-button\">\n            {option.text}\n        </button>\n    ));\n    return <div className=\"options-container\">{buttonsMarkup}</div>;\n}\n\nexport default DocOptions"]},"metadata":{},"sourceType":"module"}