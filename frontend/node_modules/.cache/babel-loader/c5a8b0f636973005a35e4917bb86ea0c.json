{"ast":null,"code":"import * as types from \"./actionTypes\";\nconst initialState = {\n  docs: [],\n  doc: {},\n  msg: \"\"\n};\n\nconst docReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"Reducer.docReducer | state: %s - docs: %s\", state, action.payload);\n\n  switch (action.type) {\n    case types.GET_DOCS:\n      return { ...state,\n        docs: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default docReducer;","map":{"version":3,"sources":["/home/lizz/fall2021/dfind/Senior-Design/frontend/src/redux/reducer.js"],"names":["types","initialState","docs","doc","msg","docReducer","state","action","console","log","payload","type","GET_DOCS"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC,EADY;AAEjBC,EAAAA,GAAG,EAAE,EAFY;AAGjBC,EAAAA,GAAG,EAAE;AAHY,CAArB;;AAKA,MAAMC,UAAU,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAwDH,KAAxD,EAA8DC,MAAM,CAACG,OAArE;;AACA,UAAOH,MAAM,CAACI,IAAd;AACI,SAAKX,KAAK,CAACY,QAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHJ,QAAAA,IAAI,EAAEK,MAAM,CAACG;AAFV,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AAPR;AASH,CAXD;;AAaA,eAAeD,UAAf","sourcesContent":["import * as types from \"./actionTypes\"\n\nconst initialState = {\n    docs:[],\n    doc: {},\n    msg: \"\"\n}\nconst docReducer = (state = initialState, action) => {\n    console.log(\"Reducer.docReducer | state: %s - docs: %s\",state,action.payload)\n    switch(action.type) {\n        case types.GET_DOCS: \n            return {\n                ...state,\n                docs: action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default docReducer;"]},"metadata":{},"sourceType":"module"}