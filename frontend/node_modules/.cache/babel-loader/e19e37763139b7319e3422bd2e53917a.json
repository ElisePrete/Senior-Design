{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocGrid/DocGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit'; ///import {docs} from \"../../model/reducer\"\n\nimport \"./DocGrid.css\";\nimport { useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n/** If we decide to present Documents in a grid format, this is where I'd put the code (crappy version available) */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DGrid() {\n  _s();\n\n  var {\n    docs\n  } = useSelector(state => state.data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: docs && Object.keys(docs).map((doc, i) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `document/${docs[doc]._id}`,\n      state: {\n        docSummary: docs[doc].summary\n      },\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"cell\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: docs[doc]._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: docs[doc].tags[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DGrid, \"OkaZ0DWSMhLGfSoIYwl3/eC66l4=\", false, function () {\n  return [useSelector];\n});\n\n_c = DGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"DGrid\");","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocGrid/DocGrid.js"],"names":["React","MDBContainer","MDBRow","MDBCol","useSelector","Link","DGrid","docs","state","data","Object","keys","map","doc","i","_id","docSummary","summary","tags"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,QAA6C,kBAA7C,C,CACA;;AACA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA;;;AACA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,MAAI;AAACC,IAAAA;AAAD,MAASH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAxB;AACF,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACKF,IAAI,IAAIG,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,GAAlB,CAAsB,CAACC,GAAD,EAAKC,CAAL,kBAC3B,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,YAAWP,IAAI,CAACM,GAAD,CAAJ,CAAUE,GAAI,EAApC;AAAuC,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAACT,IAAI,CAACM,GAAD,CAAJ,CAAUI;AAAtB,OAA9C;AAAA,6BACI;AAAe,QAAA,SAAS,EAAC,MAAzB;AAAA,+BACI;AAAA,kCACI;AAAA,mCAAK;AAAA,wBAAIV,IAAI,CAACM,GAAD,CAAJ,CAAUE;AAAd;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKR,IAAI,CAACM,GAAD,CAAJ,CAAUK,IAAV,CAAe,CAAf;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAYJ,CAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADK;AADb;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAfuBR,K;UACPF,W;;;KADOE,K","sourcesContent":["import React from 'react';\nimport { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\n///import {docs} from \"../../model/reducer\"\nimport \"./DocGrid.css\"\nimport { useSelector } from 'react-redux'\nimport {Link} from \"react-router-dom\";\n/** If we decide to present Documents in a grid format, this is where I'd put the code (crappy version available) */\nexport default function DGrid() {\n    var {docs} = useSelector(state => state.data)\n  return (\n    <div className=\"grid\">\n        {docs && Object.keys(docs).map((doc,i) => (\n            <Link to={`document/${docs[doc]._id}`} state={{docSummary:docs[doc].summary}} >\n                <tbody key={i} className=\"cell\" >\n                    <tr>\n                        <td ><b>{docs[doc]._id}</b></td>\n                        <td>{docs[doc].tags[0]}</td>\n                    </tr>\n                </tbody>\n            </Link>))}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}