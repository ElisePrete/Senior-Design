{"ast":null,"code":"import * as types from \"./actionTypes\";\nimport axios from \"axios\"; //axios allows a user to make http request through their browser\n\nvar API = window.location.host; //\"http://127.0.0.1:5000\"\n//talk to model through functions on this page\n\nif (API == 'http://127.0.0.1:3000') {\n  API = 'http://127.0.0.1:5000';\n} else {\n  API = '';\n}\n\nconst getObjs = objs => ({\n  type: types.GET_OBJS,\n  payload: objs\n});\n\nexport const loadQuestions = () => {\n  return function (dispatch) {\n    axios.get(`${API}/api/Questions`).then(resp => dispatch(getObjs(resp.data))).catch(err => console.log(\"error:\", err));\n  };\n};\nexport const loadQuestion = () => {\n  return function (dispatch) {\n    axios.get(`${API}/api/Question`).then(resp => dispatch(getObjs(resp.data))).catch(err => console.log(\"error:\", err));\n  };\n};\n/*\nexport const loadDocuments = () => {\n    return function(dispatch) {\n        axios.get(`${API}/api/Documents`)\n        .then((resp) =>  dispatch(getObjs(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\n\n\nexport const loadSummaries = () => {\n    return function(dispatch) {\n        axios.get(`${API}/api/Summaries`)\n        .then((resp) =>  dispatch(getObjs(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}*/\n//NOTE: above functions were used for demo (recyclable)","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/actions.js"],"names":["types","axios","API","window","location","host","getObjs","objs","type","GET_OBJS","payload","loadQuestions","dispatch","get","then","resp","data","catch","err","console","log","loadQuestion"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,IAAIC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA1B,C,CAA+B;AAC/B;;AAEA,IAAIH,GAAG,IAAI,uBAAX,EAAoC;AAChCA,EAAAA,GAAG,GAAG,uBAAN;AACH,CAFD,MAGK;AACDA,EAAAA,GAAG,GAAG,EAAN;AACH;;AACD,MAAMI,OAAO,GAAIC,IAAD,KACZ;AACAC,EAAAA,IAAI,EAAER,KAAK,CAACS,QADZ;AAEAC,EAAAA,OAAO,EAACH;AAFR,CADY,CAAhB;;AAOA,OAAO,MAAMI,aAAa,GAAG,MAAM;AAC/B,SAAO,UAASC,QAAT,EAAmB;AACtBX,IAAAA,KAAK,CAACY,GAAN,CAAW,GAAEX,GAAI,gBAAjB,EACCY,IADD,CACOC,IAAD,IAAWH,QAAQ,CAACN,OAAO,CAACS,IAAI,CAACC,IAAN,CAAR,CADzB,EAECC,KAFD,CAEQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB,CAFhB;AAGF,GAJF;AAKH,CANM;AAOP,OAAO,MAAMG,YAAY,GAAG,MAAM;AAC9B,SAAO,UAAST,QAAT,EAAmB;AACtBX,IAAAA,KAAK,CAACY,GAAN,CAAW,GAAEX,GAAI,eAAjB,EACCY,IADD,CACOC,IAAD,IAAWH,QAAQ,CAACN,OAAO,CAACS,IAAI,CAACC,IAAN,CAAR,CADzB,EAECC,KAFD,CAEQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB,CAFhB;AAGF,GAJF;AAKH,CANM;AAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import * as types from \"./actionTypes\"\nimport axios from \"axios\";\n//axios allows a user to make http request through their browser\nvar API = window.location.host //\"http://127.0.0.1:5000\"\n//talk to model through functions on this page\n\nif (API == 'http://127.0.0.1:3000') {\n    API = 'http://127.0.0.1:5000'\n}\nelse {\n    API = ''\n}\nconst getObjs = (objs) => (\n    {\n    type: types.GET_OBJS,\n    payload:objs\n});\n\n\nexport const loadQuestions = () => {\n    return function(dispatch) {\n        axios.get(`${API}/api/Questions`)\n        .then((resp) =>  dispatch(getObjs(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\nexport const loadQuestion = () => {\n    return function(dispatch) {\n        axios.get(`${API}/api/Question`)\n        .then((resp) =>  dispatch(getObjs(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\n/*\nexport const loadDocuments = () => {\n    return function(dispatch) {\n        axios.get(`${API}/api/Documents`)\n        .then((resp) =>  dispatch(getObjs(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\n\n\nexport const loadSummaries = () => {\n    return function(dispatch) {\n        axios.get(`${API}/api/Summaries`)\n        .then((resp) =>  dispatch(getObjs(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}*/\n\n//NOTE: above functions were used for demo (recyclable)\n\n"]},"metadata":{},"sourceType":"module"}