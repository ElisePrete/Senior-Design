{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/Chatbot.js\",\n    _s = $RefreshSig$();\n\nimport './Chatbot.css';\nimport React, { useState } from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\nimport 'react-chatbot-kit/build/main.css';\nimport config from \"./chatbotConfig\";\nimport MessageParser from \"./MessageParser\";\nimport ActionProvider from \"./ActionProvider\";\nimport Rephrase from \"./Rephrase\";\n/*Chatbot UI component*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CBot() {\n  _s();\n\n  const [showBot, toggleBot] = useState(false); // const [botHTML, setHTML] = useState({})\n\n  function delay(time) {\n    return new Promise(resolve => setTimeout(resolve, time));\n  }\n  /* async function saveMessages(messages, tmlS)  {\n     console.log(\"messages:\", messages, \"tml:\", tmlS)\n     await delay(1000);\n     const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n     if (html[0] == undefined) { console.log(\"bouncinsm,\", html); return}\n     console.log(\"saved:\",html[0])\n     localStorage.setItem('chat_messages', html[0].innerHTML)\n   };\n   async function loadMessages() {\n    // await delay(1000);\n     const parsed = localStorage.getItem('chat_messages')\n     console.log(\"in storage:\", parsed)\n     const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n     if (html[0] == undefined) {\n       console.log(\"h LM:\",html)\n       return parsed\n     }\n     //document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")[0].innerHTML = parsed\n     return parsed\n   };*/\n\n\n  function saveMessages(messages, HTMLString) {\n    console.log(\"SM mess:\", messages, \"html:\", HTMLString);\n    localStorage.setItem('chat_messages', messages);\n  }\n\n  ;\n\n  const loadMessages = () => {\n    const messages = localStorage.getItem('chat_messages');\n    console.log(\"LM mess:\", messages);\n\n    if (messages == null) {\n      return;\n    }\n\n    return messages;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CBot\",\n    children: [showBot && /*#__PURE__*/_jsxDEV(Chatbot, {\n      config: config,\n      actionProvider: ActionProvider,\n      messageHistory: loadMessages(),\n      messageParser: MessageParser,\n      saveMessages: saveMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => toggleBot(prev => !prev),\n      children: \"Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CBot, \"XZikR9JDxGKMAgwa1QIIzhUCaj4=\");\n\n_c = CBot;\nexport default CBot;\n\nvar _c;\n\n$RefreshReg$(_c, \"CBot\");","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/Chatbot.js"],"names":["React","useState","Chatbot","config","MessageParser","ActionProvider","Rephrase","CBot","showBot","toggleBot","delay","time","Promise","resolve","setTimeout","saveMessages","messages","HTMLString","console","log","localStorage","setItem","loadMessages","getItem","prev"],"mappings":";;;AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA;;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBR,QAAQ,CAAC,KAAD,CAArC,CADc,CAEf;;AACC,WAASS,KAAT,CAAeC,IAAf,EAAqB;AACnB,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,IAAV,CAAjC,CAAP;AACD;AACF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,WAASI,YAAT,CAAsBC,QAAtB,EAAgCC,UAAhC,EAA4C;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBH,QAAvB,EAAgC,OAAhC,EAAyCC,UAAzC;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCL,QAAtC;AACD;;AAAA;;AACD,QAAMM,YAAY,GAAG,MAAM;AACzB,UAAMN,QAAQ,GAAGI,YAAY,CAACG,OAAb,CAAqB,eAArB,CAAjB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBH,QAAvB;;AACA,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpB;AACD;;AAED,WAAOA,QAAP;AACD,GARD;;AASA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,eACGR,OAAO,iBAAK,QAAC,OAAD;AACZ,MAAA,MAAM,EAAEL,MADI;AAEZ,MAAA,cAAc,EAAEE,cAFJ;AAGZ,MAAA,cAAc,EAAEiB,YAAY,EAHhB;AAIZ,MAAA,aAAa,EAAElB,aAJH;AAKZ,MAAA,YAAY,EAAEW;AALF;AAAA;AAAA;AAAA;AAAA,YADf,eAQG;AAAQ,MAAA,OAAO,EAAE,MAAMN,SAAS,CAAEe,IAAD,IAAU,CAACA,IAAZ,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAnDQjB,I;;KAAAA,I;AAuDT,eAAeA,IAAf","sourcesContent":["import './Chatbot.css'\nimport React, {useState} from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\nimport 'react-chatbot-kit/build/main.css'\nimport config from \"./chatbotConfig\";\nimport MessageParser from \"./MessageParser\"\nimport ActionProvider from \"./ActionProvider\";\nimport Rephrase from \"./Rephrase\"\n/*Chatbot UI component*/\nfunction CBot() {\n  const [showBot, toggleBot] = useState(false);\n // const [botHTML, setHTML] = useState({})\n  function delay(time) {\n    return new Promise(resolve => setTimeout(resolve, time));\n  }\n /* async function saveMessages(messages, tmlS)  {\n    console.log(\"messages:\", messages, \"tml:\", tmlS)\n    await delay(1000);\n    const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n    if (html[0] == undefined) { console.log(\"bouncinsm,\", html); return}\n    console.log(\"saved:\",html[0])\n    localStorage.setItem('chat_messages', html[0].innerHTML)\n  };\n  async function loadMessages() {\n   // await delay(1000);\n    const parsed = localStorage.getItem('chat_messages')\n    console.log(\"in storage:\", parsed)\n    const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n    if (html[0] == undefined) {\n      console.log(\"h LM:\",html)\n      return parsed\n    }\n    //document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")[0].innerHTML = parsed\n    return parsed\n  };*/\n  function saveMessages(messages, HTMLString) {\n    console.log(\"SM mess:\",messages,\"html:\", HTMLString);\n    localStorage.setItem('chat_messages', messages);\n  };\n  const loadMessages = () => {\n    const messages = localStorage.getItem('chat_messages');\n    console.log(\"LM mess:\",messages);\n    if (messages == null) {\n      return \n    }\n    \n    return messages;\n  };\n  return (\n    <div  className=\"CBot\">\n      {showBot && (<Chatbot\n       config={config}\n       actionProvider={ActionProvider}\n       messageHistory={loadMessages()}\n       messageParser={MessageParser}\n       saveMessages={saveMessages}\n      />)}\n       <button onClick={() => toggleBot((prev) => !prev)}>Bot</button>\n    </div>\n  );\n}\n\n\n\nexport default CBot;"]},"metadata":{},"sourceType":"module"}