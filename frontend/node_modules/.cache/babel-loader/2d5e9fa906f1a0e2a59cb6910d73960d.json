{"ast":null,"code":"import{loadQuestion,loadQuestions}from'../../../model/actions';import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Link}from\"react-router-dom\";import\"./Other.css\";/*React Widget which shows document-independent Results. Currently wonky:\n- 'More results' widget changes all previous result components\n- 'More results' also display original first result\nimport OtherMore from \"./OtherMore.js\" <- OtherMore component fixes the latter but not the former. removed atm */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Other=function Other(params){var InputQuestion=params['InputQuestion'];var howMany=params['howManyQs'];var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.data;}),obj=_useSelector.obj;useEffect(function(){dispatch(loadQuestion({InputQuestion:InputQuestion,howMany:howMany}));//console.log(\"obj:\",obj)\n},[]);if(InputQuestion==undefined||howMany==undefined){// console.log(\"returned empty div\")\nreturn/*#__PURE__*/_jsx(\"tbody\",{children:\"No results found, please rephrase\"});}//preventing first result from resurfacing when new results are shown. only 4 extra results are supported atm\n/* if (howMany == 4) {\n        return OtherMore(obj)\n    }*/return/*#__PURE__*/_jsxs(_Fragment,{children:[obj&&Object.keys(obj).map(function(item,i){return/*#__PURE__*/_jsxs(\"tbody\",{className:\"link\",children:[/*#__PURE__*/_jsx(\"a\",{href:obj[item].link,children:/*#__PURE__*/_jsx(\"b\",{children:obj[item].question})}),/*#__PURE__*/_jsx(\"br\",{})]},i);}),\" \"]});};export default Other;","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/OtherQandA/Other.js"],"names":["loadQuestion","loadQuestions","React","useEffect","useState","useDispatch","useSelector","Link","Other","params","InputQuestion","howMany","dispatch","state","data","obj","undefined","Object","keys","map","item","i","link","question"],"mappings":"AAAA,OAASA,YAAT,CAAsBC,aAAtB,KAA2C,wBAA3C,CACA,MAAOC,CAAAA,KAAP,EAAeC,SAAf,CAAyBC,QAAzB,KAAwC,OAAxC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,MAAO,aAAP,CAEA;AACA;AACA;AACA,iH,6IACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,MAAD,CAAY,CACtB,GAAIC,CAAAA,aAAa,CAAGD,MAAM,CAAC,eAAD,CAA1B,CACA,GAAIE,CAAAA,OAAO,CAAGF,MAAM,CAAC,WAAD,CAApB,CAEA,GAAMG,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,iBAAYC,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAN,CAAvB,CAAKC,GAAL,cAAKA,GAAL,CAEAZ,SAAS,CAAC,UAAM,CACZS,QAAQ,CAACZ,YAAY,CAAC,CAACU,aAAa,CAAbA,aAAD,CAAeC,OAAO,CAAPA,OAAf,CAAD,CAAb,CAAR,CACA;AACH,CAHQ,CAGN,EAHM,CAAT,CAIA,GAAID,aAAa,EAAIM,SAAjB,EAA8BL,OAAO,EAAIK,SAA7C,CAAwD,CACrD;AACC,mBAAQ,4DAAR,CACH,CACD;AACD;AACH;AACA,OACI,mBACI,2BAAGD,GAAG,EAAIE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,GAAjB,CAAqB,SAACC,IAAD,CAAMC,CAAN,qBAC3B,eAAe,SAAS,CAAC,MAAzB,wBACI,UAAG,IAAI,CAAEN,GAAG,CAACK,IAAD,CAAH,CAAUE,IAAnB,uBAAyB,mBAAIP,GAAG,CAACK,IAAD,CAAH,CAAUG,QAAd,EAAzB,EADJ,cAC4D,aAD5D,GAAYF,CAAZ,CAD2B,EAArB,CAAV,OADJ,CAOH,CA1BD,CA6BA,cAAeb,CAAAA,KAAf","sourcesContent":["import { loadQuestion,loadQuestions } from '../../../model/actions';\nimport React, {useEffect,useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Link} from \"react-router-dom\";\nimport \"./Other.css\"\n\n/*React Widget which shows document-independent Results. Currently wonky:\n- 'More results' widget changes all previous result components\n- 'More results' also display original first result\nimport OtherMore from \"./OtherMore.js\" <- OtherMore component fixes the latter but not the former. removed atm */\nconst Other = (params) => {\n    var InputQuestion = params['InputQuestion']\n    var howMany = params['howManyQs']\n\n    const dispatch = useDispatch();\n    var {obj} = useSelector(state => state.data)\n    \n    useEffect(() => {\n        dispatch(loadQuestion({InputQuestion,howMany}));\n        //console.log(\"obj:\",obj)\n    }, [])\n    if (InputQuestion == undefined || howMany == undefined) {\n       // console.log(\"returned empty div\")\n        return (<tbody>No results found, please rephrase</tbody>)\n    }\n    //preventing first result from resurfacing when new results are shown. only 4 extra results are supported atm\n   /* if (howMany == 4) {\n        return OtherMore(obj)\n    }*/\n    return (\n        <>{obj && Object.keys(obj).map((item,i) => (\n            <tbody key={i} className=\"link\">\n                <a href={obj[item].link}><b>{obj[item].question}</b></a><br/>\n            </tbody>\n        ))} </>\n    )  \n}\n\n\nexport default Other;\n"]},"metadata":{},"sourceType":"module"}