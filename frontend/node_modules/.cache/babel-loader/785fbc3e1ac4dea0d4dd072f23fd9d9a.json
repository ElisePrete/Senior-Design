{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/ActionProvider.js\";\nimport Other from './OtherQandA/Other'; //Action provider contains all the 'functions' of the chatbot\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc\n  /*createClientMessage,\n  stateRef,\n  createCustomMessage,\n  ...rest*/\n  ) {\n    this.addMessageToState = message => {\n      this.setState(prevState => ({ ...prevState,\n        messages: [...prevState.messages, message]\n      }));\n    };\n\n    this.greet = () => {\n      const message = this.createChatBotMessage(\"Hello!\");\n      this.addMessageToState(message); //adds message to ui\n    };\n\n    this.handleDocuments = () => {\n      const message = this.createChatBotMessage(\"docs not supported atm\");\n      this.addMessageToState(message); //adds message to ui\n    };\n\n    this.handleOtherSetup = () => {\n      this.setState(state => ({ ...state,\n        DocumentSearch: false\n      }));\n      const message = this.createChatBotMessage(\"Enter your question:\");\n      this.addMessageToState(message);\n    };\n\n    this.handleMoreResults = () => {\n      this.setState(state => ({ ...state,\n        OtherQuestion: question\n      }));\n      const message = this.createChatBotMessage(\"Answer found:\", {\n        widget: \"Options\",\n        widgetFunc: props => /*#__PURE__*/_jsxDEV(Other, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 30\n        }, this),\n        mapStateToProps: [\"OtherQuestion\", \"howManyQs\"]\n      });\n    };\n\n    this.handleOther = question => {\n      console.log(\"ap:\", question);\n      this.setState(state => ({ ...state,\n        OtherQuestion: question\n      }));\n      const message = this.createChatBotMessage(\"Answer found:\", {\n        widget: \"Other\",\n        widgetFunc: props => /*#__PURE__*/_jsxDEV(Other, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 30\n        }, this),\n        mapStateToProps: [\"OtherQuestion\"]\n      });\n      this.addMessageToState(message);\n    };\n\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    /*this.createClientMessage = createClientMessage;\n    this.stateRef = stateRef;\n    this.createCustomMessage = createCustomMessage;*/\n  } //adds message to list of chatbot messages. used in all subsequent funcs\n\n\n}\n\nexport default ActionProvider;","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/ActionProvider.js"],"names":["Other","ActionProvider","constructor","createChatBotMessage","setStateFunc","addMessageToState","message","setState","prevState","messages","greet","handleDocuments","handleOtherSetup","state","DocumentSearch","handleMoreResults","OtherQuestion","question","widget","widgetFunc","props","mapStateToProps","handleOther","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,oBAAlB,C,CACA;;;;AACA,MAAMC,cAAN,CAAqB;AACnBC,EAAAA,WAAW,CACTC,oBADS,EAETC;AACA;AACJ;AACA;AACA;AANa,IAOT;AAAA,SAQFC,iBARE,GAQmBC,OAAD,IAAa;AACjC,WAAKC,QAAL,CAAeC,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5BC,QAAAA,QAAQ,EAAE,CAAC,GAAGD,SAAS,CAACC,QAAd,EAAuBH,OAAvB;AAFkB,OAAhB,CAAd;AAIC,KAbC;;AAAA,SAeFI,KAfE,GAeM,MAAM;AACd,YAAMJ,OAAO,GAAG,KAAKH,oBAAL,CAA0B,QAA1B,CAAhB;AACA,WAAKE,iBAAL,CAAuBC,OAAvB,EAFc,CAEkB;AAC/B,KAlBC;;AAAA,SAqBFK,eArBE,GAqBgB,MAAM;AACxB,YAAML,OAAO,GAAG,KAAKH,oBAAL,CAA0B,wBAA1B,CAAhB;AACA,WAAKE,iBAAL,CAAuBC,OAAvB,EAFwB,CAEQ;AAC/B,KAxBC;;AAAA,SA0BFM,gBA1BE,GA0BiB,MAAM;AACvB,WAAKL,QAAL,CAAeM,KAAD,KAAY,EACxB,GAAGA,KADqB;AAExBC,QAAAA,cAAc,EAAC;AAFS,OAAZ,CAAd;AAIA,YAAMR,OAAO,GAAG,KAAKH,oBAAL,CAA0B,sBAA1B,CAAhB;AACA,WAAKE,iBAAL,CAAuBC,OAAvB;AACD,KAjCC;;AAAA,SAkCFS,iBAlCE,GAkCkB,MAAM;AACxB,WAAKR,QAAL,CAAeM,KAAD,KAAY,EACxB,GAAGA,KADqB;AAExBG,QAAAA,aAAa,EAACC;AAFU,OAAZ,CAAd;AAKA,YAAMX,OAAO,GAAG,KAAKH,oBAAL,CAA0B,eAA1B,EAChB;AACEe,QAAAA,MAAM,EAAC,SADT;AAEEC,QAAAA,UAAU,EAAGC,KAAD,iBAAW,QAAC,KAAD,OAAWA;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFzB;AAGEC,QAAAA,eAAe,EAAE,CAAC,eAAD,EAAiB,WAAjB;AAHnB,OADgB,CAAhB;AAMD,KA9CC;;AAAA,SAiDFC,WAjDE,GAiDaL,QAAD,IAAc;AAC1BM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBP,QAAlB;AACA,WAAKV,QAAL,CAAeM,KAAD,KAAY,EACxB,GAAGA,KADqB;AAExBG,QAAAA,aAAa,EAACC;AAFU,OAAZ,CAAd;AAKA,YAAMX,OAAO,GAAG,KAAKH,oBAAL,CAA0B,eAA1B,EAChB;AACEe,QAAAA,MAAM,EAAC,OADT;AAEEC,QAAAA,UAAU,EAAGC,KAAD,iBAAW,QAAC,KAAD,OAAWA;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFzB;AAGEC,QAAAA,eAAe,EAAE,CAAC,eAAD;AAHnB,OADgB,CAAhB;AAMA,WAAKhB,iBAAL,CAAuBC,OAAvB;AACD,KA/DC;;AACA,SAAKH,oBAAL,GAA4BA,oBAA5B;AACA,SAAKI,QAAL,GAAgBH,YAAhB;AACA;AACJ;AACA;AACG,GAdkB,CAenB;;;AAfmB;;AA0ErB,eAAeH,cAAf","sourcesContent":["import Other from './OtherQandA/Other' \n//Action provider contains all the 'functions' of the chatbot\nclass ActionProvider {\n  constructor(\n    createChatBotMessage,\n    setStateFunc \n    /*createClientMessage,\n    stateRef,\n    createCustomMessage,\n    ...rest*/\n  ) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    /*this.createClientMessage = createClientMessage;\n    this.stateRef = stateRef;\n    this.createCustomMessage = createCustomMessage;*/\n  }\n  //adds message to list of chatbot messages. used in all subsequent funcs\n  addMessageToState = (message) => {\n  this.setState((prevState) => ({\n    ...prevState,\n    messages: [...prevState.messages,message],\n  }));\n  };\n\n  greet = () => {\n  const message = this.createChatBotMessage(\"Hello!\")\n  this.addMessageToState(message) //adds message to ui\n  }\n\n  //function to fetch docs\n  handleDocuments = () => {\n  const message = this.createChatBotMessage(\"docs not supported atm\")\n  this.addMessageToState(message) //adds message to ui\n  }\n  //function to setup 'other q and a' questions\n  handleOtherSetup = () => {\n    this.setState((state) => ({\n      ...state,\n      DocumentSearch:false\n    }))\n    const message = this.createChatBotMessage(\"Enter your question:\")\n    this.addMessageToState(message)\n  }\n  handleMoreResults = () => {\n    this.setState((state) => ({\n      ...state,\n      OtherQuestion:question\n     })\n    )\n    const message = this.createChatBotMessage(\"Answer found:\",\n    {\n      widget:\"Options\",\n      widgetFunc: (props) => <Other {...props} />,\n      mapStateToProps: [\"OtherQuestion\",\"howManyQs\"],\n    })\n  }\n\n  //function to fetch 'other q and a' questions based on user's query\n  handleOther = (question) => {\n    console.log(\"ap:\",question)\n    this.setState((state) => ({\n      ...state,\n      OtherQuestion:question\n     })\n    )\n    const message = this.createChatBotMessage(\"Answer found:\",\n    {\n      widget:\"Other\",\n      widgetFunc: (props) => <Other {...props} />,\n      mapStateToProps: [\"OtherQuestion\"],\n    })\n    this.addMessageToState(message)\n  }\n}\n\nexport default ActionProvider;\n"]},"metadata":{},"sourceType":"module"}