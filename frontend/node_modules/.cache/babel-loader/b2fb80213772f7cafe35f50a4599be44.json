{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocTable/DocTable.js\";\nimport { docs } from \"../../model/reducer\";\nimport React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport \"./DocTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DocTable extends Component {\n  constructor(props) {\n    var _s = $RefreshSig$();\n\n    super(props);\n    this.recievedData = _s(() => {\n      _s();\n\n      var {\n        docs\n      } = useSelector(state => state.data);\n      const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage);\n      const postData = slice.map(doc => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `document/${docs[doc]._id}`,\n          state: {\n            docSummary: docs[doc].summary\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"doc._id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"doc.tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this));\n      this.setState({\n        pageCount: Math.ceil(docs.length / this.state.perPage),\n        postData\n      });\n    }, \"OkaZ0DWSMhLGfSoIYwl3/eC66l4=\", true);\n\n    this.handlePageClick = page => {\n      const selectedPage = page.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => {\n        this.recievedData();\n      });\n    };\n\n    this.state = {\n      offset: 0,\n      data: [],\n      perPage: 10,\n      currentPage: 0\n    };\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [this.state.postData, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"prev\",\n        nextLabel: \"next\",\n        breakLabel: \"...\",\n        breakClassName: \"break-me\",\n        pageCount: this.state.pageCount,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 5,\n        onPageChange: this.handlePageClick,\n        containerClassName: \"pagination\",\n        activeClassName: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default DocTable;\n/*import { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\n///import {docs} from \"../../model/reducer\"\nimport \"./DocGrid.css\"\nimport { useSelector } from 'react-redux'\nimport {Link} from \"react-router-dom\";\n\nexport default function DGrid() {\n    var {docs} = useSelector(state => state.data)\n   // path = \"/document:\" + docs[doc]._id\n  return (\n    <div>\n        {docs && Object.keys(docs).map((doc,i) => (\n            \n            <Link to={`document/${docs[doc]._id}`} state={{docSummary:docs[doc].summary}}\n           /*to={`document/:${docs[doc]._id}`} \n           {{\n                pathname:\"document\",\n                state:\"lol\"\n            }}*/\n\n/* >\n<tbody key={i} >\n    <tr>\n        <td ><b>{docs[doc]._id}</b></td>\n        <td>{docs[doc].tags[0]}</td>\n    </tr>\n</tbody>\n</Link>))}\n</div>\n);\n} \n*/","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocTable/DocTable.js"],"names":["docs","React","Component","ReactPaginate","DocTable","constructor","props","recievedData","useSelector","state","data","slice","offset","perPage","postData","map","doc","_id","docSummary","summary","setState","pageCount","Math","ceil","length","handlePageClick","page","selectedPage","selected","currentPage","render"],"mappings":";AAAA,SAAQA,IAAR,QAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,gBAAP;;;AACA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA;;AACf,UAAMA,KAAN;AADe,SAUnBC,YAVmB,MAUJ,MAAK;AAAA;;AAChB,UAAI;AAACP,QAAAA;AAAD,UAASQ,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAxB;AACA,YAAMC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAW,KAAKF,KAAL,CAAWG,MAAtB,EAA8B,KAAKH,KAAL,CAAWG,MAAX,GAAoB,KAAKH,KAAL,CAAWI,OAA7D,CAAd;AACA,YAAMC,QAAQ,GAAGH,KAAK,CAACI,GAAN,CAAUC,GAAG,iBAC1B,QAAC,KAAD,CAAO,QAAP;AAAA,gCAEI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAWhB,IAAI,CAACgB,GAAD,CAAJ,CAAUC,GAAI,EAApC;AAAuC,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAClB,IAAI,CAACgB,GAAD,CAAJ,CAAUG;AAAtB,WAA9C;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,CAAjB;AAQA,WAAKC,QAAL,CAAc;AACVC,QAAAA,SAAS,EAACC,IAAI,CAACC,IAAL,CAAUvB,IAAI,CAACwB,MAAL,GAAc,KAAKf,KAAL,CAAWI,OAAnC,CADA;AAEVC,QAAAA;AAFU,OAAd;AAIH,KAzBkB;;AAAA,SA2BnBW,eA3BmB,GA2BAC,IAAD,IAAU;AACxB,YAAMC,YAAY,GAAGD,IAAI,CAACE,QAA1B;AACA,YAAMhB,MAAM,GAAGe,YAAY,GAAG,KAAKlB,KAAL,CAAWI,OAAzC;AAEA,WAAKO,QAAL,CAAc;AACVS,QAAAA,WAAW,EAAEF,YADH;AAEVf,QAAAA,MAAM,EAACA;AAFG,OAAd,EAGG,MAAK;AACJ,aAAKL,YAAL;AACH,OALD;AAMH,KArCkB;;AAEf,SAAKE,KAAL,GAAa;AACTG,MAAAA,MAAM,EAAC,CADE;AAETF,MAAAA,IAAI,EAAC,EAFI;AAGTG,MAAAA,OAAO,EAAC,EAHC;AAITgB,MAAAA,WAAW,EAAC;AAJH,KAAb;AAMH;;AA+BDC,EAAAA,MAAM,GAAG;AACL;AAAA;AAAA,iBACK,KAAKrB,KAAL,CAAWK,QADhB,eAEI,QAAC,aAAD;AACI,QAAA,aAAa,EAAE,MADnB;AAEI,QAAA,SAAS,EAAE,MAFf;AAGI,QAAA,UAAU,EAAE,KAHhB;AAII,QAAA,cAAc,EAAE,UAJpB;AAKI,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWY,SAL1B;AAMI,QAAA,oBAAoB,EAAE,CAN1B;AAOI,QAAA,kBAAkB,EAAE,CAPxB;AAQI,QAAA,YAAY,EAAE,KAAKI,eARvB;AASI,QAAA,kBAAkB,EAAE,YATxB;AAUI,QAAA,eAAe,EAAE;AAVrB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAcH;;AAvD4B;;AA2DjC,eAAerB,QAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {docs} from \"../../model/reducer\"\nimport React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport \"./DocTable.css\"\nclass DocTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            offset:0,\n            data:[],\n            perPage:10,\n            currentPage:0\n        };\n    }\n    \n    recievedData = () =>{\n        var {docs} = useSelector(state => state.data) \n        const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n        const postData = slice.map(doc => \n            <React.Fragment>\n\n                <Link to={`document/${docs[doc]._id}`} state={{docSummary:docs[doc].summary}}>\n                    <h4>doc._id</h4>\n                </Link>\n                <p>doc.tags</p>\n            </React.Fragment>)\n        this.setState({\n            pageCount:Math.ceil(docs.length / this.state.perPage),\n            postData\n        })\n    }\n\n    handlePageClick = (page) => {\n        const selectedPage = page.selected;\n        const offset = selectedPage * this.state.perPage\n\n        this.setState({\n            currentPage: selectedPage,\n            offset:offset\n        }, () =>{\n            this.recievedData()\n        });\n    }\n\n    render() {\n        <div>\n            {this.state.postData}\n            <ReactPaginate\n                previousLabel={\"prev\"}\n                nextLabel={\"next\"}\n                breakLabel={\"...\"}\n                breakClassName={\"break-me\"}\n                pageCount={this.state.pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={this.handlePageClick}\n                containerClassName={\"pagination\"}\n                activeClassName={\"active\"}/>\n        </div>\n    }\n    \n}\n\nexport default DocTable;\n\n\n\n/*import { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\n///import {docs} from \"../../model/reducer\"\nimport \"./DocGrid.css\"\nimport { useSelector } from 'react-redux'\nimport {Link} from \"react-router-dom\";\n\nexport default function DGrid() {\n    var {docs} = useSelector(state => state.data)\n   // path = \"/document:\" + docs[doc]._id\n  return (\n    <div>\n        {docs && Object.keys(docs).map((doc,i) => (\n            \n            <Link to={`document/${docs[doc]._id}`} state={{docSummary:docs[doc].summary}}\n           /*to={`document/:${docs[doc]._id}`} \n           {{\n                pathname:\"document\",\n                state:\"lol\"\n            }}*//* >\n                <tbody key={i} >\n                    <tr>\n                        <td ><b>{docs[doc]._id}</b></td>\n                        <td>{docs[doc].tags[0]}</td>\n                    </tr>\n                </tbody>\n            </Link>))}\n    </div>\n  );\n} \n*/\n"]},"metadata":{},"sourceType":"module"}