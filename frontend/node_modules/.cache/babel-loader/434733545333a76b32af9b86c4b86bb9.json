{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/OtherQandA/Other.js\",\n    _s = $RefreshSig$();\n\nimport { loadQuestion, loadQuestions } from '../../../model/actions';\nimport React, { useEffect, getState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Other = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  console.log('message:', props);\n  const dispatch = useDispatch();\n  const {\n    objs\n  } = useSelector(state => state.data);\n  useEffect(() => {\n    dispatch(loadQuestion(props));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: objs && objs.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n\n_s(Other, \"fF3nWJstyHtIE5P7zBm2alkWSt8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Other;\nexport default Other;\n/*onst buttonsMarkup = options.map((option) => (\n     <button key={option.id} onClick={option.handler} className=\"option-button\">\n         {option.text}\n     </button>\n  ));\n  return <div className=\"options-container\">{buttonsMarkup}</div>;*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Other\");","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/OtherQandA/Other.js"],"names":["loadQuestion","loadQuestions","React","useEffect","getState","useDispatch","useSelector","Other","props","console","log","dispatch","objs","state","data","map","item","index","answer"],"mappings":";;;AAAA,SAASA,YAAT,EAAsBC,aAAtB,QAA2C,wBAA3C;AACA,OAAOC,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AACA,MAAMC,KAAK,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,KAAvB;AAEA,QAAMG,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAACO,IAAAA;AAAD,MAASN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACX,YAAY,CAACQ,KAAD,CAAb,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAA,cACKI,IAAI,IAAIA,IAAI,CAACG,GAAL,CAAS,CAACC,IAAD,EAAMC,KAAN,kBACd;AAAA,gBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,YADK;AADb,mBADJ;AAQH,CAhBD;;GAAMX,K;UAGeF,W,EACFC,W;;;KAJbC,K;AAkBN,eAAeA,KAAf;AAEG;AACH;AACA;AACA;AACA;AACA","sourcesContent":["import { loadQuestion,loadQuestions } from '../../../model/actions';\nimport React, {useEffect,getState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nconst Other = ({props}) => {\n    console.log('message:',props)\n    \n    const dispatch = useDispatch();\n    const {objs} = useSelector(state => state.data)\n    useEffect(() => {\n        dispatch(loadQuestion(props));\n    }, [])\n    return (\n        <>   \n            {objs && objs.map((item,index) => (\n                <p>{item.answer}</p>\n            ))}\n        </>\n\n    )\n}\n\nexport default Other;\n\n   /*onst buttonsMarkup = options.map((option) => (\n        <button key={option.id} onClick={option.handler} className=\"option-button\">\n            {option.text}\n        </button>\n\n    ));\n\n    return <div className=\"options-container\">{buttonsMarkup}</div>;*/\n"]},"metadata":{},"sourceType":"module"}