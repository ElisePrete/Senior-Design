{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/OtherQandA/Other.js\",\n    _s = $RefreshSig$();\n\nimport { loadQuestion, loadQuestions } from '../../../model/actions';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport \"./Other.css\";\nimport OtherMore from './OtherMore';\n/*React Widget which shows document-independent Results. Currently wonky:\n- 'More results' widget changes all previous result components\n- 'More results' also display original first result\nimport OtherMore from \"./OtherMore.js\" <- OtherMore component fixes the latter but not the former. removed atm */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Other = params => {\n  _s();\n\n  var InputQuestion = params['InputQuestion'];\n  var howMany = params['howManyQs'];\n  console.group(\"other many:\", howMany);\n  const dispatch = useDispatch();\n  var {\n    obj\n  } = useSelector(state => state.data);\n  useEffect(() => {\n    dispatch(loadQuestion({\n      InputQuestion,\n      howMany\n    })); //console.log(\"obj:\",obj)\n  }, [howMany]);\n\n  if (InputQuestion == undefined || howMany == undefined) {\n    // console.log(\"returned empty div\")\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: \"No results found, please rephrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this);\n  } //preventing first result from resurfacing when new results are shown. only 4 extra results are supported atm\n\n\n  if (howMany == 4) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: obj && Object.keys(obj).slice(1, undefined).map((item, i) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: obj[item].question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: obj[item].link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this))\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [obj && Object.keys(obj).slice(0, 1).map((item, i) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n      className: \"link\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"qNa\",\n        href: obj[item].link,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"question\",\n          children: [\" \", obj[item].question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 58\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 111\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)), \" \"]\n  }, void 0, true);\n};\n\n_s(Other, \"+23bocEW8l2HOVCXQrrC9ERIUJA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Other;\nexport default Other;\n\nvar _c;\n\n$RefreshReg$(_c, \"Other\");","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/OtherQandA/Other.js"],"names":["loadQuestion","loadQuestions","React","useEffect","useState","useDispatch","useSelector","Link","OtherMore","Other","params","InputQuestion","howMany","console","group","dispatch","obj","state","data","undefined","Object","keys","slice","map","item","i","question","link"],"mappings":";;;AAAA,SAASA,YAAT,EAAsBC,aAAtB,QAA2C,wBAA3C;AACA,OAAOC,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,KAAK,GAAIC,MAAD,IAAY;AAAA;;AACtB,MAAIC,aAAa,GAAGD,MAAM,CAAC,eAAD,CAA1B;AACA,MAAIE,OAAO,GAAGF,MAAM,CAAC,WAAD,CAApB;AACAG,EAAAA,OAAO,CAACC,KAAR,CAAc,aAAd,EAA6BF,OAA7B;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAI;AAACW,IAAAA;AAAD,MAAQV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAvB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ,CAACf,YAAY,CAAC;AAACW,MAAAA,aAAD;AAAeC,MAAAA;AAAf,KAAD,CAAb,CAAR,CADY,CAEZ;AACH,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;;AAIA,MAAID,aAAa,IAAIQ,SAAjB,IAA8BP,OAAO,IAAIO,SAA7C,EAAwD;AACrD;AACC,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAdqB,CAetB;;;AACA,MAAIP,OAAO,IAAI,CAAf,EAAkB;AACd,wBAAQ;AAAA,gBACHI,GAAG,IAAII,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,KAAjB,CAAuB,CAAvB,EAAyBH,SAAzB,EAAoCI,GAApC,CAAwC,CAACC,IAAD,EAAMC,CAAN,kBAC5C;AAAA,+BACI;AAAA,kCACI;AAAA,mCAAI;AAAA,wBAAIT,GAAG,CAACQ,IAAD,CAAH,CAAUE;AAAd;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKV,GAAG,CAACQ,IAAD,CAAH,CAAUG;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAYF,CAAZ;AAAA;AAAA;AAAA;AAAA,cADI;AADJ,qBAAR;AAUH;;AACD,sBACI;AAAA,eAAGT,GAAG,IAAII,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,KAAjB,CAAuB,CAAvB,EAAyB,CAAzB,EAA4BC,GAA5B,CAAgC,CAACC,IAAD,EAAMC,CAAN,kBACtC;AAAe,MAAA,SAAS,EAAC,MAAzB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,KAAb;AAAmB,QAAA,IAAI,EAAET,GAAG,CAACQ,IAAD,CAAH,CAAUG,IAAnC;AAAA,+BAAyC;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA,0BAA0BX,GAAG,CAACQ,IAAD,CAAH,CAAUE,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,cADJ,eACkG;AAAA;AAAA;AAAA;AAAA,cADlG;AAAA,OAAYD,CAAZ;AAAA;AAAA;AAAA;AAAA,YADM,CAAV;AAAA,kBADJ;AAOH,CAnCD;;GAAMhB,K;UAIeJ,W,EACLC,W;;;KALVG,K;AAsCN,eAAeA,KAAf","sourcesContent":["import { loadQuestion,loadQuestions } from '../../../model/actions';\nimport React, {useEffect,useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Link} from \"react-router-dom\";\nimport \"./Other.css\"\nimport OtherMore from './OtherMore';\n/*React Widget which shows document-independent Results. Currently wonky:\n- 'More results' widget changes all previous result components\n- 'More results' also display original first result\nimport OtherMore from \"./OtherMore.js\" <- OtherMore component fixes the latter but not the former. removed atm */\nconst Other = (params) => {\n    var InputQuestion = params['InputQuestion']\n    var howMany = params['howManyQs']\n    console.group(\"other many:\", howMany)\n    const dispatch = useDispatch();\n    var {obj} = useSelector(state => state.data)\n    \n    useEffect(() => {\n        dispatch(loadQuestion({InputQuestion,howMany}));\n        //console.log(\"obj:\",obj)\n    }, [howMany])\n    if (InputQuestion == undefined || howMany == undefined) {\n       // console.log(\"returned empty div\")\n        return (<tbody>No results found, please rephrase</tbody>)\n    }\n    //preventing first result from resurfacing when new results are shown. only 4 extra results are supported atm\n    if (howMany == 4) {\n        return (<>\n            {obj && Object.keys(obj).slice(1,undefined).map((item,i) => (\n                <tbody key={i}>\n                    <tr>\n                        <td><b>{obj[item].question}</b></td>\n                        <td>{obj[item].link}</td>\n                    </tr>\n                </tbody>\n        ))}\n    </>)       \n    }\n    return (\n        <>{obj && Object.keys(obj).slice(0,1).map((item,i) => (\n            <tbody key={i} className=\"link\">\n                <a className='qNa' href={obj[item].link}><b className='question'> {obj[item].question}</b></a><br/>\n            </tbody>\n        ))} </>\n    )  \n}\n\n\nexport default Other;\n"]},"metadata":{},"sourceType":"module"}