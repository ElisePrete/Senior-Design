{"ast":null,"code":"export const getCustomStyles = config => {\n  if (config.customStyles) {\n    return config.customStyles;\n  }\n\n  return {};\n};\nexport const getInitialState = config => {\n  if (config.state) {\n    return config.state;\n  }\n\n  return {};\n};\nexport const getWidgets = config => {\n  if (config.widgets) {\n    return config.widgets;\n  }\n\n  return [];\n};\nexport const getCustomComponents = config => {\n  if (config.customComponents) {\n    return config.customComponents;\n  }\n\n  return {};\n};\nexport const getBotName = config => {\n  if (config.botName) {\n    return config.botName;\n  }\n\n  return 'Bot';\n};\nexport const getObject = object => {\n  if (typeof object === 'object') return object;\n  return {};\n};\nexport const getCustomMessages = config => {\n  if (config.customMessages) {\n    return config.customMessages;\n  }\n\n  return {};\n};\nexport const validateProps = (config, MessageParser) => {\n  const errors = [];\n\n  if (!config.initialMessages) {\n    errors.push(\"Config must contain property 'initialMessages', and it expects it to be an array of chatbotmessages.\");\n  } // const messageParser = new MessageParser();\n  // if (!messageParser['parse']) {\n  //   errors.push(\n  //     \"Messageparser must implement the method 'parse', please add this method to your object. The signature is parse(message: string).\"\n  //   );\n  // }\n\n\n  return errors;\n};\nexport const isConstructor = func => {\n  try {\n    new func();\n  } catch (err) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/ChatbotClone/react-chatbot-kit-master/src/components/Chatbot/utils.ts"],"names":["getCustomStyles","config","customStyles","getInitialState","state","getWidgets","widgets","getCustomComponents","customComponents","getBotName","botName","getObject","object","getCustomMessages","customMessages","validateProps","MessageParser","errors","initialMessages","push","isConstructor","func","err"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAIC,MAAD,IAAqB;AAClD,MAAIA,MAAM,CAACC,YAAX,EAAyB;AACvB,WAAOD,MAAM,CAACC,YAAd;AACD;;AACD,SAAO,EAAP;AACD,CALM;AAOP,OAAO,MAAMC,eAAe,GAAIF,MAAD,IAAqB;AAClD,MAAIA,MAAM,CAACG,KAAX,EAAkB;AAChB,WAAOH,MAAM,CAACG,KAAd;AACD;;AACD,SAAO,EAAP;AACD,CALM;AAOP,OAAO,MAAMC,UAAU,GAAIJ,MAAD,IAAqB;AAC7C,MAAIA,MAAM,CAACK,OAAX,EAAoB;AAClB,WAAOL,MAAM,CAACK,OAAd;AACD;;AACD,SAAO,EAAP;AACD,CALM;AAOP,OAAO,MAAMC,mBAAmB,GAAIN,MAAD,IAAqB;AACtD,MAAIA,MAAM,CAACO,gBAAX,EAA6B;AAC3B,WAAOP,MAAM,CAACO,gBAAd;AACD;;AAED,SAAO,EAAP;AACD,CANM;AAQP,OAAO,MAAMC,UAAU,GAAIR,MAAD,IAAqB;AAC7C,MAAIA,MAAM,CAACS,OAAX,EAAoB;AAClB,WAAOT,MAAM,CAACS,OAAd;AACD;;AACD,SAAO,KAAP;AACD,CALM;AAOP,OAAO,MAAMC,SAAS,GAAIC,MAAD,IAAoB;AAC3C,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC,OAAOA,MAAP;AAChC,SAAO,EAAP;AACD,CAHM;AAKP,OAAO,MAAMC,iBAAiB,GAAIZ,MAAD,IAAqB;AACpD,MAAIA,MAAM,CAACa,cAAX,EAA2B;AACzB,WAAOb,MAAM,CAACa,cAAd;AACD;;AACD,SAAO,EAAP;AACD,CALM;AAOP,OAAO,MAAMC,aAAa,GAAG,CAACd,MAAD,EAAkBe,aAAlB,KAAyC;AACpE,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAAChB,MAAM,CAACiB,eAAZ,EAA6B;AAC3BD,IAAAA,MAAM,CAACE,IAAP,CACE,sGADF;AAGD,GANmE,CAQpE;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAOF,MAAP;AACD,CAhBM;AAkBP,OAAO,MAAMG,aAAa,GAAIC,IAAD,IAAe;AAC1C,MAAI;AACF,QAAIA,IAAJ;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAPM","sourcesContent":["import IConfig from '../../interfaces/IConfig';\n\nexport const getCustomStyles = (config: IConfig) => {\n  if (config.customStyles) {\n    return config.customStyles;\n  }\n  return {};\n};\n\nexport const getInitialState = (config: IConfig) => {\n  if (config.state) {\n    return config.state;\n  }\n  return {};\n};\n\nexport const getWidgets = (config: IConfig) => {\n  if (config.widgets) {\n    return config.widgets;\n  }\n  return [];\n};\n\nexport const getCustomComponents = (config: IConfig) => {\n  if (config.customComponents) {\n    return config.customComponents;\n  }\n\n  return {};\n};\n\nexport const getBotName = (config: IConfig) => {\n  if (config.botName) {\n    return config.botName;\n  }\n  return 'Bot';\n};\n\nexport const getObject = (object: Object) => {\n  if (typeof object === 'object') return object;\n  return {};\n};\n\nexport const getCustomMessages = (config: IConfig) => {\n  if (config.customMessages) {\n    return config.customMessages;\n  }\n  return {};\n};\n\nexport const validateProps = (config: IConfig, MessageParser: any) => {\n  const errors = [];\n  if (!config.initialMessages) {\n    errors.push(\n      \"Config must contain property 'initialMessages', and it expects it to be an array of chatbotmessages.\"\n    );\n  }\n\n  // const messageParser = new MessageParser();\n  // if (!messageParser['parse']) {\n  //   errors.push(\n  //     \"Messageparser must implement the method 'parse', please add this method to your object. The signature is parse(message: string).\"\n  //   );\n  // }\n\n  return errors;\n};\n\nexport const isConstructor = (func: any) => {\n  try {\n    new func();\n  } catch (err) {\n    return false;\n  }\n  return true;\n};\n"]},"metadata":{},"sourceType":"module"}