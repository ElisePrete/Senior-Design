{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/ChatbotClone/react-chatbot-kit-master/src/components/UserChatMessage/UserChatMessage.tsx\";\nimport React from 'react';\nimport ConditionallyRender from 'react-conditionally-render';\nimport { callIfExists } from '../Chat/chatUtils';\nimport UserIcon from \"../../assets/icons/user-alt.svg\";\nimport './UserChatMessage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserChatMessage = _ref => {\n  let {\n    message,\n    customComponents\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"react-chatbot-kit-user-chat-message-container\",\n    children: [/*#__PURE__*/_jsxDEV(ConditionallyRender, {\n      condition: !!customComponents.userChatMessage,\n      show: callIfExists(customComponents.userChatMessage, {\n        message\n      }),\n      elseShow: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"react-chatbot-kit-user-chat-message\",\n        children: [message, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react-chatbot-kit-user-chat-message-arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConditionallyRender, {\n      condition: !!customComponents.userAvatar,\n      show: callIfExists(customComponents.userAvatar),\n      elseShow: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"react-chatbot-kit-user-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react-chatbot-kit-user-avatar-container\",\n          children: /*#__PURE__*/_jsxDEV(UserIcon, {\n            className: \"react-chatbot-kit-user-avatar-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UserChatMessage;\nexport default UserChatMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserChatMessage\");","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/ChatbotClone/react-chatbot-kit-master/src/components/UserChatMessage/UserChatMessage.tsx"],"names":["React","ConditionallyRender","callIfExists","UserChatMessage","message","customComponents","userChatMessage","userAvatar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AAEA,SAASC,YAAT,QAA6B,mBAA7B;;AAIA,OAAO,uBAAP;;;AAQA,MAAMC,eAAe,GAAG,QAGK;AAAA,MAHJ;AACvBC,IAAAA,OADuB;AAEvBC,IAAAA;AAFuB,GAGI;AAC3B,sBACE;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA,4BACE,QAAC,mBAAD;AACE,MAAA,SAAS,EAAE,CAAC,CAACA,gBAAgB,CAACC,eADhC;AAEE,MAAA,IAAI,EAAEJ,YAAY,CAACG,gBAAgB,CAACC,eAAlB,EAAmC;AACnDF,QAAAA;AADmD,OAAnC,CAFpB;AAKE,MAAA,QAAQ,eACN;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA,mBACGA,OADH,eAEE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,mBAAD;AACE,MAAA,SAAS,EAAE,CAAC,CAACC,gBAAgB,CAACE,UADhC;AAEE,MAAA,IAAI,EAAEL,YAAY,CAACG,gBAAgB,CAACE,UAAlB,CAFpB;AAGE,MAAA,QAAQ,eACN;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,yCAAf;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,SAAS,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA/BD;;KAAMJ,e;AAiCN,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport ConditionallyRender from 'react-conditionally-render';\n\nimport { callIfExists } from '../Chat/chatUtils';\n\nimport UserIcon from '../../assets/icons/user-alt.svg';\n\nimport './UserChatMessage.css';\nimport { ICustomComponents } from '../../interfaces/IConfig';\n\ninterface IUserChatMessageProps {\n  message: string;\n  customComponents: ICustomComponents;\n}\n\nconst UserChatMessage = ({\n  message,\n  customComponents,\n}: IUserChatMessageProps) => {\n  return (\n    <div className=\"react-chatbot-kit-user-chat-message-container\">\n      <ConditionallyRender\n        condition={!!customComponents.userChatMessage}\n        show={callIfExists(customComponents.userChatMessage, {\n          message,\n        })}\n        elseShow={\n          <div className=\"react-chatbot-kit-user-chat-message\">\n            {message}\n            <div className=\"react-chatbot-kit-user-chat-message-arrow\"></div>\n          </div>\n        }\n      />\n      <ConditionallyRender\n        condition={!!customComponents.userAvatar}\n        show={callIfExists(customComponents.userAvatar)}\n        elseShow={\n          <div className=\"react-chatbot-kit-user-avatar\">\n            <div className=\"react-chatbot-kit-user-avatar-container\">\n              <UserIcon className=\"react-chatbot-kit-user-avatar-icon\" />\n            </div>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nexport default UserChatMessage;\n"]},"metadata":{},"sourceType":"module"}