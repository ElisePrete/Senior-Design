{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/OtherQandA/Other.js\",\n    _s = $RefreshSig$();\n\nimport { loadQuestion, loadQuestions } from '../../../model/actions';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport \"./Other.css\";\nimport OtherMore from './OtherMore';\n/*React Widget which shows document-independent Results. Currently wonky:\n- 'More results' widget changes all previous result components\n- 'More results' also display original first result\nimport OtherMore from \"./OtherMore.js\" <- OtherMore component fixes the latter but not the former. removed atm */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Other = params => {\n  _s();\n\n  var InputQuestion = params['InputQuestion'];\n  var howMany = params['howManyQs'];\n  const dispatch = useDispatch();\n  var {\n    obj\n  } = useSelector(state => state.data);\n  var toFrom = [0, 1];\n  useEffect(() => {\n    dispatch(loadQuestion({\n      InputQuestion,\n      howMany\n    })); //console.log(\"obj:\",obj)\n  }, [howMany]);\n\n  if (InputQuestion == undefined || howMany == undefined) {\n    // console.log(\"returned empty div\")\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: \"No results found, please rephrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this);\n  } //preventing first result from resurfacing when new results are shown. only 4 extra results are supported atm\n\n\n  if (howMany == 4) {\n    toFrom = [1, undefined];\n  }\n\n  return NoReRender(obj, toFrom);\n};\n\n_s(Other, \"+23bocEW8l2HOVCXQrrC9ERIUJA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Other;\nexport default Other;\n\nconst NoReRender = (arr, toFrom) => {\n  console.log(\"nrr:\", toFrom);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [arr && Object.keys(arr).slice(toFrom).map((item, i) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n      className: \"link\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"qNa\",\n        href: arr[item].link,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"question\",\n          children: [\" \", arr[item].question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 107\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), \" \"]\n  }, void 0, true);\n};\n\n_c2 = NoReRender;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Other\");\n$RefreshReg$(_c2, \"NoReRender\");","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/OtherQandA/Other.js"],"names":["loadQuestion","loadQuestions","React","useEffect","useState","useDispatch","useSelector","Link","OtherMore","Other","params","InputQuestion","howMany","dispatch","obj","state","data","toFrom","undefined","NoReRender","arr","console","log","Object","keys","slice","map","item","i","link","question"],"mappings":";;;AAAA,SAASA,YAAT,EAAsBC,aAAtB,QAA2C,wBAA3C;AACA,OAAOC,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,KAAK,GAAIC,MAAD,IAAY;AAAA;;AACtB,MAAIC,aAAa,GAAGD,MAAM,CAAC,eAAD,CAA1B;AACA,MAAIE,OAAO,GAAGF,MAAM,CAAC,WAAD,CAApB;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAI;AAACS,IAAAA;AAAD,MAAQR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAvB;AACA,MAAIC,MAAM,GAAG,CAAC,CAAD,EAAG,CAAH,CAAb;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAACb,YAAY,CAAC;AAACW,MAAAA,aAAD;AAAeC,MAAAA;AAAf,KAAD,CAAb,CAAR,CADY,CAEZ;AACH,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;;AAIA,MAAID,aAAa,IAAIO,SAAjB,IAA8BN,OAAO,IAAIM,SAA7C,EAAwD;AACrD;AACC,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAbqB,CActB;;;AACA,MAAIN,OAAO,IAAI,CAAf,EAAkB;AACdK,IAAAA,MAAM,GAAG,CAAC,CAAD,EAAIC,SAAJ,CAAT;AACH;;AACD,SAAOC,UAAU,CAACL,GAAD,EAAMG,MAAN,CAAjB;AACH,CAnBD;;GAAMR,K;UAGeJ,W,EACLC,W;;;KAJVG,K;AAsBN,eAAeA,KAAf;;AAEA,MAAMU,UAAU,GAAG,CAACC,GAAD,EAAKH,MAAL,KAAgB;AAC/BI,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,MAApB;AACA,sBAAQ;AAAA,eAAGG,GAAG,IAAIG,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBK,KAAjB,CAAuBR,MAAvB,EAA+BS,GAA/B,CAAmC,CAACC,IAAD,EAAMC,CAAN,kBACjD;AAAe,MAAA,SAAS,EAAC,MAAzB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,KAAb;AAAmB,QAAA,IAAI,EAAER,GAAG,CAACO,IAAD,CAAH,CAAUE,IAAnC;AAAA,+BAAyC;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA,0BAA0BT,GAAG,CAACO,IAAD,CAAH,CAAUG,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,cADJ,eACkG;AAAA;AAAA;AAAA;AAAA,cADlG;AAAA,OAAYF,CAAZ;AAAA;AAAA;AAAA;AAAA,YADc,CAAV;AAAA,kBAAR;AAKH,CAPD;;MAAMT,U","sourcesContent":["import { loadQuestion,loadQuestions } from '../../../model/actions';\nimport React, {useEffect,useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Link} from \"react-router-dom\";\nimport \"./Other.css\"\nimport OtherMore from './OtherMore';\n/*React Widget which shows document-independent Results. Currently wonky:\n- 'More results' widget changes all previous result components\n- 'More results' also display original first result\nimport OtherMore from \"./OtherMore.js\" <- OtherMore component fixes the latter but not the former. removed atm */\nconst Other = (params) => {\n    var InputQuestion = params['InputQuestion']\n    var howMany = params['howManyQs']\n    const dispatch = useDispatch();\n    var {obj} = useSelector(state => state.data)\n    var toFrom = [0,1]\n    useEffect(() => {\n        dispatch(loadQuestion({InputQuestion,howMany}));\n        //console.log(\"obj:\",obj)\n    }, [howMany])\n    if (InputQuestion == undefined || howMany == undefined) {\n       // console.log(\"returned empty div\")\n        return (<tbody>No results found, please rephrase</tbody>)\n    }\n    //preventing first result from resurfacing when new results are shown. only 4 extra results are supported atm\n    if (howMany == 4) {\n        toFrom = [1, undefined]\n    }\n    return NoReRender(obj, toFrom)  \n}\n\n\nexport default Other;\n\nconst NoReRender = (arr,toFrom) => {\n    console.log(\"nrr:\", toFrom)\n    return (<>{arr && Object.keys(arr).slice(toFrom).map((item,i) => (\n        <tbody key={i} className=\"link\">\n            <a className='qNa' href={arr[item].link}><b className='question'> {arr[item].question}</b></a><br/>\n        </tbody>\n    ))} </>)\n}"]},"metadata":{},"sourceType":"module"}