{"ast":null,"code":"import*as types from\"./actionTypes\";import axios from\"axios\";//axios allows a user to make http request through their browser\nvar API=window.location.host;//\"http://127.0.0.1:5000\"\n//talk to model through functions on this page\n//for local or remote differentiation\n//console.log(\"API:\",API)\nif(API=='localhost:3000'){API='http://127.0.0.1:5000';}else{API='';}/*\n*** to connect a new api call: ***\n--make a unique action type in actionTypes\n--make a sister function utilizing that actionType here\n--develop a case for that actionType in reducer */var getQuestions=function getQuestions(objs){return{type:types.GET_QS,payload:objs};};var getQuestion=function getQuestion(obj){return{type:types.GET_SINGLE_Q,payload:obj};};var getDocuments=function getDocuments(docs){return{type:types.GET_DOCS,payload:docs};};var getDocument=function getDocument(doc){return{type:types.GET_SINGLE_DOC,payload:doc};};export var loadQuestions=function loadQuestions(){console.log(\"in loadqs\");return function(dispatch){axios.get(\"\".concat(API,\"/api/Questions\")).then(function(resp){return dispatch(getQuestions(resp.data));}).catch(function(err){return console.log(\"error:\",err);});};};export var loadQuestion=function loadQuestion(_ref){var InputQuestion=_ref.InputQuestion,howMany=_ref.howMany;//InputQuestion = params['InputQuestion']\n//howMany = params['howMany']\n//,\"how many:\", InputQuestion[0['howMany']\n//console.log(\"in loadquestion:\", InputQuestion,\"how many\",howMany)\nreturn function(dispatch){axios.get(\"\".concat(API,\"/api/Question\"),{params:{input:InputQuestion,many:howMany}}).then(function(resp){return dispatch(getQuestion(resp.data));}).catch(function(err){return console.log(\"load question error:\",err);});};};export var loadDocuments=function loadDocuments(_ref2){var InputQuestion=_ref2.InputQuestion;//console.log(\"actionjs:\",InputQuestion)\nreturn function(dispatch){axios.get(\"\".concat(API,\"/api/Documents\"),{params:{input:InputQuestion}}).then(function(resp){return dispatch(getDocuments(resp.data));}).catch(function(err){return console.log(\"error:\",err);});};};export var loadDocument=function loadDocument(_ref3){var docID=_ref3.docID;return function(dispatch){axios.get(\"\".concat(API,\"/api/Document\"),{params:{input:docID}}).then(function(resp){return dispatch(getDocument(resp.data));}).catch(function(err){return console.log(\"error:\",err);});};};","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/actions.js"],"names":["types","axios","API","window","location","host","getQuestions","objs","type","GET_QS","payload","getQuestion","obj","GET_SINGLE_Q","getDocuments","docs","GET_DOCS","getDocument","doc","GET_SINGLE_DOC","loadQuestions","console","log","dispatch","get","then","resp","data","catch","err","loadQuestion","InputQuestion","howMany","params","input","many","loadDocuments","loadDocument","docID"],"mappings":"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","sourcesContent":["import * as types from \"./actionTypes\"\nimport axios from \"axios\";\n//axios allows a user to make http request through their browser\nvar API = window.location.host //\"http://127.0.0.1:5000\"\n//talk to model through functions on this page\n\n//for local or remote differentiation\n//console.log(\"API:\",API)\nif (API == 'localhost:3000') {\n    API = 'http://127.0.0.1:5000'\n}\nelse {\n    API = ''\n}\n\n/*\n*** to connect a new api call: ***\n--make a unique action type in actionTypes\n--make a sister function utilizing that actionType here\n--develop a case for that actionType in reducer */\n\nconst getQuestions = (objs) => (\n    {\n    type: types.GET_QS,\n    payload:objs\n});\n\nconst getQuestion = (obj) => (\n    {\n    type: types.GET_SINGLE_Q,\n    payload:obj\n});\n\nconst getDocuments = (docs) => (\n    {\n    type: types.GET_DOCS,\n    payload:docs\n});\n\nconst getDocument = (doc) => (\n    {\n    type: types.GET_SINGLE_DOC,\n    payload:doc\n});\n\n\nexport const loadQuestions = () => {\n    console.log(\"in loadqs\")\n    return function(dispatch) {\n        axios.get(`${API}/api/Questions`)\n        .then((resp) =>  dispatch(getQuestions(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\nexport const loadQuestion = ({InputQuestion,howMany}) => {\n    //InputQuestion = params['InputQuestion']\n    //howMany = params['howMany']\n    //,\"how many:\", InputQuestion[0['howMany']\n    //console.log(\"in loadquestion:\", InputQuestion,\"how many\",howMany)\n    return function(dispatch) {\n        axios.get(`${API}/api/Question`, { params:{\n            input:InputQuestion,\n            many:howMany}\n        })\n        .then((resp) =>  dispatch(getQuestion(resp.data)) )\n        .catch((err) => console.log(\"load question error:\", err))\n     }\n}\n\nexport const loadDocuments = ({InputQuestion}) => {\n    //console.log(\"actionjs:\",InputQuestion)\n    return function(dispatch) {\n        axios.get(`${API}/api/Documents`, { params:{\n            input:InputQuestion}\n        })\n        .then((resp) =>  dispatch(getDocuments(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\n\nexport const loadDocument = ({docID}) => {\n    return function(dispatch) {\n        axios.get(`${API}/api/Document`, { params:{\n            input:docID}\n        })\n        .then((resp) =>  dispatch(getDocument(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}"]},"metadata":{},"sourceType":"module"}