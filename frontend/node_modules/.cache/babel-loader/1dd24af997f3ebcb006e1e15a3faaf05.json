{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/DocSearch/DocSearch.js\",\n    _s = $RefreshSig$();\n\nimport { loadDocuments } from '../../../model/actions';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { pure, compose } from 'recompose';\n/* React Widget (text) which appears when a user has asked a question independent of docs. \n   Presents # of results within the Chatbot */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DocSearchshared = params => {\n  _s();\n\n  var InputQuestion = params['InputQuestion']; //must call dispatch or else results will stay at zero\n\n  const dispatch = useDispatch();\n  var {\n    docs\n  } = useSelector(state => state.data);\n  useEffect(() => {\n    dispatch(loadDocuments({\n      InputQuestion\n    }));\n  }, []); //.then(response => console.log(\"response!:\",response.length))\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: [docs.length, \" docs found\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true);\n};\n\n_s(DocSearchshared, \"RM+6Em/LKIJ/HZpiF/pHZdbAtGI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DocSearchshared;\nconst DocSearch = pure(DocSearchshared);\n_c2 = DocSearch;\nexport default DocSearch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DocSearchshared\");\n$RefreshReg$(_c2, \"DocSearch\");","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/DocSearch/DocSearch.js"],"names":["loadDocuments","React","useEffect","useDispatch","useSelector","pure","compose","DocSearchshared","params","InputQuestion","dispatch","docs","state","data","length","DocSearch"],"mappings":";;;AAAA,SAASA,aAAT,QAA6B,wBAA7B;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAcC,OAAd,QAA6B,WAA7B;AACA;AACA;;;;;AACA,MAAMC,eAAe,GAAIC,MAAD,IAAY;AAAA;;AAChC,MAAIC,aAAa,GAAGD,MAAM,CAAC,eAAD,CAA1B,CADgC,CAEhC;;AACA,QAAME,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAI;AAACQ,IAAAA;AAAD,MAASP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAxB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACV,aAAa,CAAC;AAACS,MAAAA;AAAD,KAAD,CAAd,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT,CALgC,CAOzB;;AACP,sBAAS;AAAA,iCAAG;AAAA,iBAAIE,IAAI,CAACG,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH;AAAA,kBAAT;AACH,CATD;;GAAMP,e;UAGeJ,W,EACJC,W;;;KAJXG,e;AAWN,MAAMQ,SAAS,GAAGV,IAAI,CAACE,eAAD,CAAtB;MAAMQ,S;AAEN,eAAgBA,SAAhB","sourcesContent":["import { loadDocuments} from '../../../model/actions';\nimport React, {useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { pure,compose } from 'recompose';\n/* React Widget (text) which appears when a user has asked a question independent of docs. \n   Presents # of results within the Chatbot */\nconst DocSearchshared = (params) => {\n    var InputQuestion = params['InputQuestion']\n    //must call dispatch or else results will stay at zero\n    const dispatch = useDispatch();\n    var {docs} = useSelector(state => state.data)\n    useEffect(() => {\n        dispatch(loadDocuments({InputQuestion}));\n    }, []) //.then(response => console.log(\"response!:\",response.length))\n    return ( <> <b>{docs.length} docs found</b> </> )\n}\n\nconst DocSearch = pure(DocSearchshared)\n\nexport default (DocSearch)"]},"metadata":{},"sourceType":"module"}