{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/chatbotConfig.js\";\nimport React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport Options from './Options/Options';\nimport Quiz from './Quiz/Quiz';\nimport Other from './OtherQandA/Other';\n/*import Overview from \"../components/widgets/Overview/Overview\";\nimport MessageParser from \"../components/widgets/MessageParser/MessageParser\";\n/import ActionProviderDocs from \"../components/widgets/ActionProvider/ActionProviderDocs\";\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"DocsBot\";\nconst config = {\n  state: {\n    DocumentKeywords: [],\n    OtherQuestion: [],\n    DocumentSearch: null\n  },\n  initialMessages: [createChatBotMessage(`Welcome to Dfind! What would you like to find?`, {\n    widget: \"options\"\n  })],\n  widgets: [//registering components inside of the chatbot-kit\n  {\n    widgetName: \"Other\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(Other, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }, this)\n  }, {\n    widgetName: \"options\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(Options, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 30\n    }, this)\n  }, {\n    widgetName: \"Quiz\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(Quiz, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 30\n    }, this),\n    //getting access to actionProvider\n    props: {\n      questions: [{\n        question: \"What is a veteran?\",\n        answer: \"You are,silly.\",\n        id: 1\n      }, {\n        question: \"What is a disability?\",\n        answer: \"major boo boo.\",\n        id: 2\n      }] //list of questions in this format:\n\n    }\n  }]\n};\n/* botName: botName,\nlang: \"no\",\ncustomStyles: {\n botMessageBox: {\n   backgroundColor: \"#376B7E\",\n },\n chatButton: {\n   backgroundColor: \"#5ccc9d\",\n },\n},\ninitialMessages: [\n createChatBotMessage(\n   `Hi I'm ${botName}. I’m here to help you explain how I work.`\n ),\n createChatBotMessage(\n   \"Here's a quick overview over what I need to function. ask me about the different parts to dive deeper.\",\n   {\n     withAvatar: false,\n     delay: 500,\n     widget: \"overview\",\n   }\n ),\n],\nstate: {\n gist: \"\",\n},\ncustomComponents: {},\nwidgets: [\n {\n   widgetName: \"overview\",\n   widgetFunc: (props) => <Overview {...props} />,\n   mapStateToProps: [\"gist\"],\n },\n {\n   widgetName: \"messageParser\",\n   widgetFunc: (props) => <MessageParser {...props} />,\n   mapStateToProps: [\"gist\"],\n },\n{\n   widgetName: \"actionProviderDocs\",\n   widgetFunc: (props) => <ActionProviderDocs {...props} />,\n   mapStateToProps: [\"gist\"],\n }\n],*/\n\nexport default config;","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/chatbotConfig.js"],"names":["React","createChatBotMessage","Options","Quiz","Other","botName","config","state","DocumentKeywords","OtherQuestion","DocumentSearch","initialMessages","widget","widgets","widgetName","widgetFunc","props","questions","question","answer","id"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA;AACA;AACA;AACA;;;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,gBAAgB,EAAC,EADZ;AAELC,IAAAA,aAAa,EAAC,EAFT;AAGLC,IAAAA,cAAc,EAAC;AAHV,GADM;AAMbC,EAAAA,eAAe,EAAE,CACfV,oBAAoB,CACjB,gDADiB,EACgC;AAChDW,IAAAA,MAAM,EAAC;AADyC,GADhC,CADL,CANJ;AAYbC,EAAAA,OAAO,EAAE,CAAE;AACT;AACEC,IAAAA,UAAU,EAAE,OADd;AAEEC,IAAAA,UAAU,EAAGC,KAAD,iBAAW,QAAC,KAAD,OAAUA;AAAV;AAAA;AAAA;AAAA;AAAA;AAFzB,GADO,EAOP;AACEF,IAAAA,UAAU,EAAE,SADd;AAEEC,IAAAA,UAAU,EAAGC,KAAD,iBAAW,QAAC,OAAD,OAAYA;AAAZ;AAAA;AAAA;AAAA;AAAA;AAFzB,GAPO,EAWP;AACEF,IAAAA,UAAU,EAAE,MADd;AAEEC,IAAAA,UAAU,EAAGC,KAAD,iBAAW,QAAC,IAAD,OAASA;AAAT;AAAA;AAAA;AAAA;AAAA,YAFzB;AAE6C;AAC3CA,IAAAA,KAAK,EAAC;AACJC,MAAAA,SAAS,EAAC,CACR;AAACC,QAAAA,QAAQ,EAAC,oBAAV;AACAC,QAAAA,MAAM,EAAC,gBADP;AAEAC,QAAAA,EAAE,EAAC;AAFH,OADQ,EAIR;AAACF,QAAAA,QAAQ,EAAC,uBAAV;AACAC,QAAAA,MAAM,EAAC,gBADP;AAEAC,QAAAA,EAAE,EAAC;AAFH,OAJQ,CADN,CAUJ;;AAVI;AAHR,GAXO;AAZI,CAAf;AA2CG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAed,MAAf","sourcesContent":["\nimport React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport Options from './Options/Options'\nimport Quiz from './Quiz/Quiz'\nimport Other from './OtherQandA/Other'\n/*import Overview from \"../components/widgets/Overview/Overview\";\nimport MessageParser from \"../components/widgets/MessageParser/MessageParser\";\n/import ActionProviderDocs from \"../components/widgets/ActionProvider/ActionProviderDocs\";\n*/\nconst botName = \"DocsBot\";\n\nconst config = {\n  state: {\n    DocumentKeywords:[],\n    OtherQuestion:[],\n    DocumentSearch:null\n  },\n  initialMessages: [\n    createChatBotMessage(\n      `Welcome to Dfind! What would you like to find?`, {\n        widget:\"options\"\n      }\n    )],\n  widgets: [ //registering components inside of the chatbot-kit\n    {\n      widgetName: \"Other\",\n      widgetFunc: (props) => <Other{...props} /> ,\n    },\n    \n    \n    {\n      widgetName: \"options\",\n      widgetFunc: (props) => <Options{...props} /> \n    },\n    {\n      widgetName: \"Quiz\",\n      widgetFunc: (props) => <Quiz{...props} /> ,//getting access to actionProvider\n      props:{\n        questions:[\n          {question:\"What is a veteran?\",\n          answer:\"You are,silly.\",\n          id:1},\n          {question:\"What is a disability?\",\n          answer:\"major boo boo.\",\n          id:2}\n\n        ]\n        //list of questions in this format:\n        \n      }\n    },\n    \n  ]\n};\n   /* botName: botName,\n  lang: \"no\",\n  customStyles: {\n    botMessageBox: {\n      backgroundColor: \"#376B7E\",\n    },\n    chatButton: {\n      backgroundColor: \"#5ccc9d\",\n    },\n  },\n  initialMessages: [\n    createChatBotMessage(\n      `Hi I'm ${botName}. I’m here to help you explain how I work.`\n    ),\n    createChatBotMessage(\n      \"Here's a quick overview over what I need to function. ask me about the different parts to dive deeper.\",\n      {\n        withAvatar: false,\n        delay: 500,\n        widget: \"overview\",\n      }\n    ),\n  ],\n  state: {\n    gist: \"\",\n  },\n  customComponents: {},\n widgets: [\n    {\n      widgetName: \"overview\",\n      widgetFunc: (props) => <Overview {...props} />,\n      mapStateToProps: [\"gist\"],\n    },\n    {\n      widgetName: \"messageParser\",\n      widgetFunc: (props) => <MessageParser {...props} />,\n      mapStateToProps: [\"gist\"],\n    },\n   {\n      widgetName: \"actionProviderDocs\",\n      widgetFunc: (props) => <ActionProviderDocs {...props} />,\n      mapStateToProps: [\"gist\"],\n    }\n  ],*/\n\nexport default config;"]},"metadata":{},"sourceType":"module"}