{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/Chatbot.js\",\n    _s = $RefreshSig$();\n\nimport './Chatbot.css';\nimport React, { useState } from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\nimport 'react-chatbot-kit/build/main.css';\nimport config from \"./chatbotConfig\";\nimport MessageParser from \"./MessageParser\";\nimport ActionProvider from \"./ActionProvider\";\nimport Rephrase from \"./Rephrase\";\n/*Chatbot UI component*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CBot() {\n  _s();\n\n  const [showBot, toggleBot] = useState(false);\n\n  const saveMessages = (messages, HTMLString) => {\n    const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\");\n    console.log(\"m:\", messages);\n    console.log(\"h:\", html);\n    localStorage.setItem('chat_messages', JSON.stringify(html));\n  };\n\n  const loadMessages = () => {\n    const parsed = localStorage.getItem('chat_messages');\n    console.log(\"p:\", parsed);\n\n    if (parsed == 'undefined') {\n      console.log(\"bouncin\");\n      return;\n    }\n\n    const messages = JSON.parse(localStorage.getItem('chat_messages'));\n    document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\").innerHTML = messages; //return messages;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CBot\",\n    children: [showBot && /*#__PURE__*/_jsxDEV(Chatbot, {\n      config: config,\n      messageParser: MessageParser,\n      actionProvider: ActionProvider,\n      messageHistory: loadMessages(),\n      saveMessages: saveMessages()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => toggleBot(prev => !prev),\n      children: \"Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CBot, \"XZikR9JDxGKMAgwa1QIIzhUCaj4=\");\n\n_c = CBot;\nexport default CBot;\n\nvar _c;\n\n$RefreshReg$(_c, \"CBot\");","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/Chatbot.js"],"names":["React","useState","Chatbot","config","MessageParser","ActionProvider","Rephrase","CBot","showBot","toggleBot","saveMessages","messages","HTMLString","html","document","getElementsByClassName","console","log","localStorage","setItem","JSON","stringify","loadMessages","parsed","getItem","parse","innerHTML","prev"],"mappings":";;;AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA;;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBR,QAAQ,CAAC,KAAD,CAArC;;AACA,QAAMS,YAAY,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AAC7C,UAAMC,IAAI,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,0CAAhC,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBN,QAAjB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBJ,IAAjB;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAtC;AACD,GALD;;AAMA,QAAMS,YAAY,GAAG,MAAM;AACzB,UAAMC,MAAM,GAAGL,YAAY,CAACM,OAAb,CAAqB,eAArB,CAAf;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBM,MAAlB;;AACA,QAAIA,MAAM,IAAI,WAAd,EAA2B;AAAEP,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAAwB;AAAO;;AAC5D,UAAMN,QAAQ,GAAGS,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACM,OAAb,CAAqB,eAArB,CAAX,CAAjB;AACAV,IAAAA,QAAQ,CAACC,sBAAT,CAAgC,0CAAhC,EAA4EW,SAA5E,GAAwFf,QAAxF,CALyB,CAMzB;AACD,GAPD;;AAQA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,eACGH,OAAO,iBAAK,QAAC,OAAD;AACZ,MAAA,MAAM,EAAEL,MADI;AAEX,MAAA,aAAa,EAAEC,aAFJ;AAGX,MAAA,cAAc,EAAEC,cAHL;AAIX,MAAA,cAAc,EAAEiB,YAAY,EAJjB;AAKX,MAAA,YAAY,EAAEZ,YAAY;AALf;AAAA;AAAA;AAAA;AAAA,YADf,eAQG;AAAQ,MAAA,OAAO,EAAE,MAAMD,SAAS,CAAEkB,IAAD,IAAU,CAACA,IAAZ,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA5BQpB,I;;KAAAA,I;AAgCT,eAAeA,IAAf","sourcesContent":["import './Chatbot.css'\nimport React, {useState} from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\nimport 'react-chatbot-kit/build/main.css'\nimport config from \"./chatbotConfig\";\nimport MessageParser from \"./MessageParser\"\nimport ActionProvider from \"./ActionProvider\";\nimport Rephrase from \"./Rephrase\"\n/*Chatbot UI component*/\nfunction CBot() {\n  const [showBot, toggleBot] = useState(false);\n  const saveMessages = (messages, HTMLString) => {\n    const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n    console.log(\"m:\",messages)\n    console.log(\"h:\",html)\n    localStorage.setItem('chat_messages', JSON.stringify(html));\n  };\n  const loadMessages = () => {\n    const parsed = localStorage.getItem('chat_messages')\n    console.log(\"p:\", parsed)\n    if (parsed == 'undefined') { console.log(\"bouncin\"); return}\n    const messages = JSON.parse(localStorage.getItem('chat_messages'));\n    document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\").innerHTML = messages\n    //return messages;\n  };\n  return (\n    <div  className=\"CBot\">\n      {showBot && (<Chatbot\n       config={config}\n        messageParser={MessageParser}\n        actionProvider={ActionProvider}\n        messageHistory={loadMessages()}\n        saveMessages={saveMessages()}\n      />)}\n       <button onClick={() => toggleBot((prev) => !prev)}>Bot</button>\n    </div>\n  );\n}\n\n\n\nexport default CBot;"]},"metadata":{},"sourceType":"module"}