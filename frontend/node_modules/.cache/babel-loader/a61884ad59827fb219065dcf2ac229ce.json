{"ast":null,"code":"import _classCallCheck from\"/home/lizz/spring2022/dfind/Senior-Design/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/lizz/spring2022/dfind/Senior-Design/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";//class which parses through user input in the chatbot\n//'The simplest version is to check for keywords with javascript .includes()'\nvar MessageParser=/*#__PURE__*/function(){//we inject chatbot properties (state) + the actionProvider (chatbot class funcs) into message parser\nfunction MessageParser(actionProvider,state){_classCallCheck(this,MessageParser);this.actionProvider=actionProvider;this.state=state;}//when a user types and hits search‚ parse is called\n_createClass(MessageParser,[{key:\"parse\",value:function parse(message){var lowercase=message.toLowerCase();if(lowercase.includes('hello')){this.actionProvider.greet();}if(this.state.DocumentSearch==-1){//if user doesn't hasn't chosen 'other' or 'doc'\nif(lowercase.includes('other')){this.state.howManyQs=0;this.state.DocumentSearch=0;this.actionProvider.handleOtherSetup();}else if(lowercase.includes('document')){this.state.DocumentSearch=1;this.actionProvider.handleDocSetup();}else{this.state.howManyQs=0;this.state.DocumentSearch=0;this.actionProvider.handleOtherSetup();}}else if(this.state.DocumentSearch==\"setup\"||this.state.DocumentSearch==true){//user is searching for documents\nthis.actionProvider.handleDocuments(lowercase);}else{/* user is searching something document-independent*/if(this.state.OtherOptions){if(lowercase.includes('yes')){this.actionProvider.handleInitialOptions();}else if(lowercase.includes('more')){this.actionProvider.handleOther(lowercase,4);}else if(lowercase.includes('no')||lowercase.includes('rephrase')){this.actionProvider.handleOtherSetup(lowercase);}else{this.actionProvider.handleConfusion();}return;}if(this.state.howManyQs==0){this.actionProvider.handleOther(lowercase,1);}else{this.actionProvider.handleOther(lowercase,4);}this.state.DocumentSearch=-1;}}}]);return MessageParser;}();export default MessageParser;","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/MessageParser.js"],"names":["MessageParser","actionProvider","state","message","lowercase","toLowerCase","includes","greet","DocumentSearch","howManyQs","handleOtherSetup","handleDocSetup","handleDocuments","OtherOptions","handleInitialOptions","handleOther","handleConfusion"],"mappings":"wQAAA;AACA;GACMA,CAAAA,a,yBACJ;AACE,uBAAYC,cAAZ,CAA4BC,KAA5B,CAAmC,qCACjC,KAAKD,cAAL,CAAsBA,cAAtB,CACA,KAAKC,KAAL,CAAaA,KAAb,CACD,CACD;+CACA,eAAMC,OAAN,CAAe,CACb,GAAMC,CAAAA,SAAS,CAAGD,OAAO,CAACE,WAAR,EAAlB,CAEA,GAAID,SAAS,CAACE,QAAV,CAAmB,OAAnB,CAAJ,CAAiC,CAC/B,KAAKL,cAAL,CAAoBM,KAApB,GACD,CACD,GAAI,KAAKL,KAAL,CAAWM,cAAX,EAA6B,CAAC,CAAlC,CAAoC,CAAE;AACpC,GAAIJ,SAAS,CAACE,QAAV,CAAmB,OAAnB,CAAJ,CAAiC,CAC/B,KAAKJ,KAAL,CAAWO,SAAX,CAAsB,CAAtB,CACA,KAAKP,KAAL,CAAWM,cAAX,CAA4B,CAA5B,CACA,KAAKP,cAAL,CAAoBS,gBAApB,GACD,CAJD,IAKK,IAAIN,SAAS,CAACE,QAAV,CAAmB,UAAnB,CAAJ,CAAoC,CACvC,KAAKJ,KAAL,CAAWM,cAAX,CAA4B,CAA5B,CACA,KAAKP,cAAL,CAAoBU,cAApB,GACD,CAHI,IAIA,CACH,KAAKT,KAAL,CAAWO,SAAX,CAAsB,CAAtB,CACA,KAAKP,KAAL,CAAWM,cAAX,CAA4B,CAA5B,CACA,KAAKP,cAAL,CAAoBS,gBAApB,GACD,CACF,CAfD,IAgBK,IAAI,KAAKR,KAAL,CAAWM,cAAX,EAA6B,OAA7B,EAAwC,KAAKN,KAAL,CAAWM,cAAX,EAA6B,IAAzE,CAA+E,CAAE;AACpF,KAAKP,cAAL,CAAoBW,eAApB,CAAoCR,SAApC,EACD,CAFI,IAGA,CAAC,qDACJ,GAAI,KAAKF,KAAL,CAAWW,YAAf,CAA6B,CAC3B,GAAIT,SAAS,CAACE,QAAV,CAAmB,KAAnB,CAAJ,CAA+B,CAC7B,KAAKL,cAAL,CAAoBa,oBAApB,GACD,CAFD,IAGK,IAAIV,SAAS,CAACE,QAAV,CAAmB,MAAnB,CAAJ,CAAgC,CACnC,KAAKL,cAAL,CAAoBc,WAApB,CAAgCX,SAAhC,CAA0C,CAA1C,EACD,CAFI,IAGA,IAAIA,SAAS,CAACE,QAAV,CAAmB,IAAnB,GAA4BF,SAAS,CAACE,QAAV,CAAmB,UAAnB,CAAhC,CAAiE,CACpE,KAAKL,cAAL,CAAoBS,gBAApB,CAAqCN,SAArC,EACD,CAFI,IAGA,CACH,KAAKH,cAAL,CAAoBe,eAApB,GACD,CACD,OACD,CACD,GAAI,KAAKd,KAAL,CAAWO,SAAX,EAAwB,CAA5B,CAA+B,CAC7B,KAAKR,cAAL,CAAoBc,WAApB,CAAgCX,SAAhC,CAA0C,CAA1C,EACD,CAFD,IAGK,CACH,KAAKH,cAAL,CAAoBc,WAApB,CAAgCX,SAAhC,CAA0C,CAA1C,EACD,CACD,KAAKF,KAAL,CAAWM,cAAX,CAA4B,CAAC,CAA7B,CACD,CAKF,C,6BAKH,cAAeR,CAAAA,aAAf","sourcesContent":["//class which parses through user input in the chatbot\n//'The simplest version is to check for keywords with javascript .includes()'\nclass MessageParser {\n  //we inject chatbot properties (state) + the actionProvider (chatbot class funcs) into message parser\n    constructor(actionProvider, state) {\n      this.actionProvider = actionProvider;\n      this.state = state;\n    }\n    //when a user types and hits search‚ parse is called\n    parse(message) {\n      const lowercase = message.toLowerCase()\n\n      if (lowercase.includes('hello')) {\n        this.actionProvider.greet();\n      }\n      if (this.state.DocumentSearch == -1){ //if user doesn't hasn't chosen 'other' or 'doc'\n        if (lowercase.includes('other')) {\n          this.state.howManyQs =0\n          this.state.DocumentSearch = 0\n          this.actionProvider.handleOtherSetup() \n        }\n        else if (lowercase.includes('document')) {\n          this.state.DocumentSearch = 1\n          this.actionProvider.handleDocSetup() \n        }\n        else {\n          this.state.howManyQs =0\n          this.state.DocumentSearch = 0\n          this.actionProvider.handleOtherSetup() \n        }\n      }\n      else if (this.state.DocumentSearch == \"setup\" || this.state.DocumentSearch == true) { //user is searching for documents\n        this.actionProvider.handleDocuments(lowercase)\n      }\n      else {/* user is searching something document-independent*/\n        if (this.state.OtherOptions) {\n          if (lowercase.includes('yes')) {\n            this.actionProvider.handleInitialOptions()\n          }\n          else if (lowercase.includes('more')) {\n            this.actionProvider.handleOther(lowercase,4);\n          }\n          else if (lowercase.includes('no') || lowercase.includes('rephrase') ) {\n            this.actionProvider.handleOtherSetup(lowercase);\n          }\n          else {\n            this.actionProvider.handleConfusion()\n          }\n          return\n        }\n        if (this.state.howManyQs == 0) {\n          this.actionProvider.handleOther(lowercase,1);\n        }\n        else {\n          this.actionProvider.handleOther(lowercase,4);\n        }\n        this.state.DocumentSearch = -1\n      }\n      \n\n      \n\n    }\n\n   \n  }\n  \n  export default MessageParser;\n"]},"metadata":{},"sourceType":"module"}