{"ast":null,"code":"var _jsxFileName = \"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/Chatbot.js\";\nimport './Chatbot.css';\nimport React, { useState } from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\nimport 'react-chatbot-kit/build/main.css';\nimport config from \"./chatbotConfig\";\nimport MessageParser from \"./MessageParser\";\nimport ActionProvider from \"./ActionProvider\";\nimport Rephrase from \"./Rephrase\";\n/*Chatbot UI component*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CBot() {\n  //const [showBot, toggleBot] = useState(false);\n  var chat_messages = []; // const [botHTML, setHTML] = useState({})\n\n  function delay(time) {\n    return new Promise(resolve => setTimeout(resolve, time));\n  }\n  /* async function saveMessages(messages, tmlS)  {\n     console.log(\"messages:\", messages, \"tml:\", tmlS)\n     await delay(1000);\n     const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n     if (html[0] == undefined) { console.log(\"bouncinsm,\", html); return}\n     console.log(\"saved:\",html[0])\n     localStorage.setItem('chat_messages', html[0].innerHTML)\n   };\n   async function loadMessages() {\n    // await delay(1000);\n     const parsed = localStorage.getItem('chat_messages')\n     console.log(\"in storage:\", parsed)\n     const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n     if (html[0] == undefined) {\n       console.log(\"h LM:\",html)\n       return parsed\n     }\n     //document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")[0].innerHTML = parsed\n     return parsed\n   };*/\n\n\n  const SaveMessages = (messages, HTMLString) => {\n    console.log(\"SM mess:\", messages, \"html:\", HTMLString);\n    localStorage.setItem('chat_messages', messages);\n  };\n\n  const loadMessages = () => {\n    const messages = localStorage.getItem('chat_messages');\n    console.log(\"LM mess:\", messages);\n    return messages;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CBot\",\n    children: true && /*#__PURE__*/_jsxDEV(Chatbot, {\n      config: config,\n      actionProvider: ActionProvider,\n      messageHistory: loadMessages(),\n      messageParser: MessageParser,\n      saveMessages: SaveMessages //<button onClick={() => toggleBot((prev) => !prev)}>Bot</button>\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CBot;\nexport default CBot;\n\nvar _c;\n\n$RefreshReg$(_c, \"CBot\");","map":{"version":3,"sources":["/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/Chatbot.js"],"names":["React","useState","Chatbot","config","MessageParser","ActionProvider","Rephrase","CBot","chat_messages","delay","time","Promise","resolve","setTimeout","SaveMessages","messages","HTMLString","console","log","localStorage","setItem","loadMessages","getItem"],"mappings":";AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA;;;;AACA,SAASC,IAAT,GAAgB;AACd;AACA,MAAIC,aAAa,GAAG,EAApB,CAFc,CAGf;;AACC,WAASC,KAAT,CAAeC,IAAf,EAAqB;AACnB,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,IAAV,CAAjC,CAAP;AACD;AACF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,QAAMI,YAAY,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBH,QAAvB,EAAgC,OAAhC,EAAyCC,UAAzC;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCL,QAAtC;AACD,GAHD;;AAIA,QAAMM,YAAY,GAAG,MAAM;AACzB,UAAMN,QAAQ,GAAGI,YAAY,CAACG,OAAb,CAAqB,eAArB,CAAjB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBH,QAAvB;AACA,WAAOA,QAAP;AAAmB,GAHrB;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,cACE,qBAAS,QAAC,OAAD;AACR,MAAA,MAAM,EAAEZ,MADA;AAER,MAAA,cAAc,EAAEE,cAFR;AAGT,MAAA,cAAc,EAAEgB,YAAY,EAHnB;AAIR,MAAA,aAAa,EAAEjB,aAJP;AAKR,MAAA,YAAY,EAAEU,YALN,CAKqB;;AALrB;AAAA;AAAA;AAAA;AAAA;AADX;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KA/CQP,I;AAmDT,eAAeA,IAAf","sourcesContent":["import './Chatbot.css'\nimport React, {useState} from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\nimport 'react-chatbot-kit/build/main.css'\nimport config from \"./chatbotConfig\";\nimport MessageParser from \"./MessageParser\"\nimport ActionProvider from \"./ActionProvider\";\nimport Rephrase from \"./Rephrase\"\n/*Chatbot UI component*/\nfunction CBot() {\n  //const [showBot, toggleBot] = useState(false);\n  var chat_messages = []\n // const [botHTML, setHTML] = useState({})\n  function delay(time) {\n    return new Promise(resolve => setTimeout(resolve, time));\n  }\n /* async function saveMessages(messages, tmlS)  {\n    console.log(\"messages:\", messages, \"tml:\", tmlS)\n    await delay(1000);\n    const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n    if (html[0] == undefined) { console.log(\"bouncinsm,\", html); return}\n    console.log(\"saved:\",html[0])\n    localStorage.setItem('chat_messages', html[0].innerHTML)\n  };\n  async function loadMessages() {\n   // await delay(1000);\n    const parsed = localStorage.getItem('chat_messages')\n    console.log(\"in storage:\", parsed)\n    const html = document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")\n    if (html[0] == undefined) {\n      console.log(\"h LM:\",html)\n      return parsed\n    }\n    //document.getElementsByClassName(\"react-chatbot-kit-chat-message-container\")[0].innerHTML = parsed\n    return parsed\n  };*/\n  const SaveMessages = (messages, HTMLString) => {\n    console.log(\"SM mess:\",messages,\"html:\", HTMLString);\n    localStorage.setItem('chat_messages', messages);\n  };\n  const loadMessages = () => {\n    const messages = localStorage.getItem('chat_messages')\n    console.log(\"LM mess:\",messages);\n    return messages;  };\n  return (\n    <div  className=\"CBot\">\n     {true && (<Chatbot\n       config={config}\n       actionProvider={ActionProvider}\n      messageHistory={loadMessages()}\n       messageParser={MessageParser}\n       saveMessages={SaveMessages}  //<button onClick={() => toggleBot((prev) => !prev)}>Bot</button>\n      />)}\n      \n    </div>\n  );\n}\n\n\n\nexport default CBot;"]},"metadata":{},"sourceType":"module"}