[{"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/index.js":"1","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/reportWebVitals.js":"2","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/App.js":"3","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/store.js":"4","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/rootReducer.js":"5","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/actions.js":"6","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/reducer.js":"7","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/actionTypes.js":"8","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/Chatbot.js":"9","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/chatbotConfig.js":"10","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/ActionProvider.js":"11","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/MessageParser.js":"12","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/GetStarted/GetStarted.js":"13","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/OtherQandA/Other.js":"14","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/InitialOptions/InitialOptions.js":"15","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/MoreOptions/MoreOptions.js":"16","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/OtherQandA/OtherMore.js":"17","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/DocSearch/DocSearch.js":"18","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocGrid/DocGrid.js":"19","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/HomePage/Home.js":"20","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocumentPage/Document.js":"21","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/DocOptions/DocOptions.js":"22","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/Rephrase.js":"23","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocTable/DocTable.js":"24"},{"size":636,"mtime":1648236794000,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1647008718000,"results":"27","hashOfConfig":"26"},{"size":480,"mtime":1648236794000,"results":"28","hashOfConfig":"26"},{"size":397,"mtime":1647008718000,"results":"29","hashOfConfig":"26"},{"size":229,"mtime":1648236794000,"results":"30","hashOfConfig":"26"},{"size":2372,"mtime":1648582612190,"results":"31","hashOfConfig":"26"},{"size":874,"mtime":1648581879982,"results":"32","hashOfConfig":"26"},{"size":159,"mtime":1648236794000,"results":"33","hashOfConfig":"26"},{"size":577,"mtime":1648689494408,"results":"34","hashOfConfig":"26"},{"size":4040,"mtime":1648740874468,"results":"35","hashOfConfig":"26"},{"size":3664,"mtime":1648689774375,"results":"36","hashOfConfig":"26"},{"size":2115,"mtime":1648740618909,"results":"37","hashOfConfig":"26"},{"size":1692,"mtime":1648582738347,"results":"38","hashOfConfig":"26"},{"size":1545,"mtime":1648740349423,"results":"39","hashOfConfig":"26"},{"size":767,"mtime":1648236794000,"results":"40","hashOfConfig":"26"},{"size":1089,"mtime":1648236794000,"results":"41","hashOfConfig":"26"},{"size":695,"mtime":1648236794000,"results":"42","hashOfConfig":"26"},{"size":1170,"mtime":1648236794000,"results":"43","hashOfConfig":"26"},{"size":982,"mtime":1648422487549,"results":"44","hashOfConfig":"26"},{"size":1226,"mtime":1648688998567,"results":"45","hashOfConfig":"26"},{"size":1190,"mtime":1648236794000,"results":"46","hashOfConfig":"26"},{"size":749,"mtime":1648689835327,"results":"47","hashOfConfig":"26"},{"size":60,"mtime":1648254393000,"results":"48","hashOfConfig":"26"},{"size":2038,"mtime":1648738700368,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"191ikqs",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/index.js",[],["105","106"],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/reportWebVitals.js",[],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/App.js",[],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/store.js",[],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/rootReducer.js",[],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/actions.js",["107"],"import * as types from \"./actionTypes\"\nimport axios from \"axios\";\n//axios allows a user to make http request through their browser\nvar API = window.location.host //\"http://127.0.0.1:5000\"\n//talk to model through functions on this page\n\n//for local or remote differentiation\n//console.log(\"API:\",API)\nif (API == 'localhost:3000') {\n    API = 'http://127.0.0.1:5000'\n}\nelse {\n    API = ''\n}\n\n/*\n*** to connect a new api call: ***\n--make a unique action type in actionTypes\n--make a sister function utilizing that actionType here\n--develop a case for that actionType in reducer */\n\nconst getQuestions = (objs) => (\n    {\n    type: types.GET_QS,\n    payload:objs\n});\n\nconst getQuestion = (obj) => (\n    {\n    type: types.GET_SINGLE_Q,\n    payload:obj\n});\n\nconst getDocuments = (docs) => (\n    {\n    type: types.GET_DOCS,\n    payload:docs\n});\n\nconst getDocument = (doc) => (\n    {\n    type: types.GET_SINGLE_DOC,\n    payload:doc\n});\n\n\nexport const loadQuestions = () => {\n    console.log(\"in loadqs\")\n    return function(dispatch) {\n        axios.get(`${API}/api/Questions`)\n        .then((resp) =>  dispatch(getQuestions(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\nexport const loadQuestion = ({InputQuestion,howMany}) => {\n    //InputQuestion = params['InputQuestion']\n    //howMany = params['howMany']\n    //,\"how many:\", InputQuestion[0['howMany']\n    //console.log(\"in loadquestion:\", InputQuestion,\"how many\",howMany)\n    return function(dispatch) {\n        axios.get(`${API}/api/Question`, { params:{\n            input:InputQuestion,\n            many:howMany}\n        })\n        .then((resp) =>  dispatch(getQuestion(resp.data)) )\n        .catch((err) => console.log(\"load question error:\", err))\n     }\n}\n\nexport const loadDocuments = ({InputQuestion}) => {\n    //console.log(\"actionjs:\",InputQuestion)\n    return function(dispatch) {\n        axios.get(`${API}/api/Documents`, { params:{\n            input:InputQuestion}\n        })\n        .then((resp) =>  dispatch(getDocuments(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}\n\nexport const loadDocument = ({docID}) => {\n    return function(dispatch) {\n        axios.get(`${API}/api/Document`, { params:{\n            input:docID}\n        })\n        .then((resp) =>  dispatch(getDocument(resp.data)) )\n        .catch((err) => console.log(\"error:\", err))\n     }\n}","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/reducer.js",[],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/model/actionTypes.js",[],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/Chatbot.js",["108"],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/chatbotConfig.js",["109","110"],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/ActionProvider.js",["111","112"],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/MessageParser.js",["113","114","115"],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/GetStarted/GetStarted.js",["116","117"],"import './GetStarted.css'\nimport React, {useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loadQuestion,loadQuestions } from '../../model/actions';\nimport {Table, Container, Row, Col} from \"react-bootstrap\"\n/**Eventually‚ this will be the getting started box.\n * Currently‚ it just presents 10 q's from the db.\n * this lets us know that the db is up and running.\n */\nfunction GetStarted() {\n    const dispatch = useDispatch();\n    var {objs} = useSelector(state => state.data)\n    useEffect(() => {\n        dispatch(loadQuestions())\n    }, [])\n    console.log(\"objs in getSTarted:\", objs)\n    return (\n        <><Container className='getStarted'>\n                <Row>\n                    <Col nd={8}>\n                        <Table bordered hover>\n                            <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Question</th>\n                                <th>Answer</th>\n                            </tr>\n                            </thead>\n                            {objs && objs.map((item,index) => (\n                                <tbody key={index}>\n                                    <tr>\n                                        <td>{index+1}</td>\n                                        <td>{item.question}</td>\n                                        <td>{item.answer}</td>\n                                    </tr>\n                                    </tbody>\n                            ))}\n                        </Table>\n                    </Col>\n\n                </Row>\n            </Container>\n        </>\n\n    )\n}\n\nexport default GetStarted\n","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/OtherQandA/Other.js",["118","119","120","121","122","123","124"],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/InitialOptions/InitialOptions.js",[],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/MoreOptions/MoreOptions.js",["125"],"/*React UI component of those 'other' or 'doc' buttons which appear at the beginning.\nconnects each button to their respective function/widget*/\nconst MoreOptions = (props) => {\n    //console.log(\"m.opt:\",props['howManyQs'])\n    var optionsM = [\n        {\n            text:\"Yes\",\n            handler:props.actionProvider.handleInitialOptions,\n            id:1\n        },\n        {\n            text:\"No, Rephrase question.\",\n            handler:props.actionProvider.handleOtherSetup,\n            id:2\n        },\n        {\n            text:\"No, See More Results\",\n            handler:props.actionProvider.handleOther,\n            id:3\n        }\n        \n    ];\n    //rn up to 4 new results are supported. can be changed\n    if (props['howManyQs'] == 4) {\n        optionsM = optionsM.slice(0,2)\n    }\n\n    const buttonsMarkup = optionsM.map((option) => (\n        <button key={option.id} onClick={option.handler} className=\"option-button\">\n            {option.text}\n        </button>\n\n    ));\n\n    return <div className=\"options-container\">{buttonsMarkup}</div>;\n\n}\n\nexport default MoreOptions","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/OtherQandA/OtherMore.js",[],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/DocSearch/DocSearch.js",["126","127"],"import { loadDocuments} from '../../../model/actions';\nimport React, {useEffect,useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n//import \"./Other.css\"\n//import OtherMore from \"./OtherMore.js\"\n/*React UI component version (js and html) of the Other Q and A popup which appears when a \nuser asks a question independent of docs*/\nconst DocSearch = (params) => {\n    //we call axios dispatch here\n    var InputQuestion = params['InputQuestion']\n    \n    const dispatch = useDispatch();\n    var {docs} = useSelector(state => state.data)\n    useEffect(() => {\n        dispatch(loadDocuments({InputQuestion}));\n        //console.log(\"docs:!\",docs)\n    }, []) //.then(response => console.log(\"response!:\",response.length))\n    return ( <>\n        <b>{docs.length} docs found</b> </>)\n    //mapping requires key index for each entry\n   /* if (docs) {\n        return ( <>\n            {docs && Object.keys(docs).map((item,i) => (\n                <tbody key={i}>\n                    <tr>\n                        <td><b>{docs[item].tags}</b></td>\n                    </tr>\n                </tbody>\n        ))} </>)\n    }*/\n}\n\n\nexport default DocSearch;\n","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocGrid/DocGrid.js",["128","129","130"],"import React from 'react';\nimport { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\n///import {docs} from \"../../model/reducer\"\nimport \"./DocGrid.css\"\nimport { useSelector } from 'react-redux'\nimport {Link} from \"react-router-dom\";\n\nexport default function DGrid() {\n    var {docs} = useSelector(state => state.data)\n   // path = \"/document:\" + docs[doc]._id\n  return (\n    <div className=\"grid\">\n        {docs && Object.keys(docs).map((doc,i) => (\n            \n            <Link to={`document/${docs[doc]._id}`} state={{docSummary:docs[doc].summary}}\n           /*to={`document/:${docs[doc]._id}`} \n           {{\n                pathname:\"document\",\n                state:\"lol\"\n            }}*/ >\n                <tbody key={i} className=\"cell\" >\n                    <tr>\n                        <td ><b>{docs[doc]._id}</b></td>\n                        <td>{docs[doc].tags[0]}</td>\n                    </tr>\n                </tbody>\n            </Link>))}\n    </div>\n  );\n}","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/HomePage/Home.js",["131","132","133","134"],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocumentPage/Document.js",["135"],"\nimport \"./Document.css\"\nimport { useLocation,useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport React, {useEffect} from 'react'\nimport { loadDocument} from '../../model/actions';\n\nexport default function Document() {\n  const { docID } = useParams();\n  //  console.log(\"ID FROM ROUTE:\",id)\n   /* docSum\n    docId\n    docFull*/\n  //  const productData = [ ... ];\n // const { url } = useRouteMatch();\n   // var docID = props.state\n   const location = useLocation()\n  const {docSummary} = location.state\n    \n    //get summary\n    //get full doc\n    var docFull = \"\"\n    const dispatch = useDispatch();\n    var {doc} = useSelector(state => state.data)\n    useEffect(() => {\n        dispatch(loadDocument({docID}));\n        /*if (doc) {\n          console.log(\"DOC in Document.js:\",doc['fullText'])\n        }*/\n        \n  \n    }, [docFull]) //.then(response => console.log(\"response!:\",response))\n    docFull = doc['fullText']\n    return ( \n      <div className=\"DocPage\">\n          <h1>{docID}</h1>\n          <div className=\"DocSummary Both\">{docSummary}</div>\n          <span className=\"FullText Both\">{docFull}</span>\n      </div>\n  \n  )\n\n    \n}","/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/DocOptions/DocOptions.js",[],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/Chatbot/Rephrase.js",[],"/home/lizz/spring2022/dfind/Senior-Design/frontend/src/components/DocTable/DocTable.js",["136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":9,"column":9,"nodeType":"143","messageId":"144","endLine":9,"endColumn":11},{"ruleId":"145","severity":1,"message":"146","line":8,"column":8,"nodeType":"147","messageId":"148","endLine":8,"endColumn":16},{"ruleId":"145","severity":1,"message":"149","line":14,"column":7,"nodeType":"147","messageId":"148","endLine":14,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":33,"column":12,"nodeType":"152","messageId":"153","endLine":84,"endColumn":4},{"ruleId":"145","severity":1,"message":"154","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":13},{"ruleId":"145","severity":1,"message":"155","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":16,"column":37,"nodeType":"143","messageId":"144","endLine":16,"endColumn":39},{"ruleId":"141","severity":1,"message":"142","line":31,"column":42,"nodeType":"143","messageId":"144","endLine":31,"endColumn":44},{"ruleId":"141","severity":1,"message":"142","line":47,"column":34,"nodeType":"143","messageId":"144","endLine":47,"endColumn":36},{"ruleId":"145","severity":1,"message":"156","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":22},{"ruleId":"157","severity":1,"message":"158","line":15,"column":8,"nodeType":"152","endLine":15,"endColumn":10,"suggestions":"159"},{"ruleId":"145","severity":1,"message":"160","line":1,"column":23,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"161","line":2,"column":26,"nodeType":"147","messageId":"148","endLine":2,"endColumn":34},{"ruleId":"145","severity":1,"message":"162","line":4,"column":9,"nodeType":"147","messageId":"148","endLine":4,"endColumn":13},{"ruleId":"145","severity":1,"message":"163","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":17},{"ruleId":"157","severity":1,"message":"164","line":20,"column":8,"nodeType":"152","endLine":20,"endColumn":10,"suggestions":"165"},{"ruleId":"141","severity":1,"message":"142","line":21,"column":23,"nodeType":"143","messageId":"144","endLine":21,"endColumn":25},{"ruleId":"141","severity":1,"message":"142","line":21,"column":47,"nodeType":"143","messageId":"144","endLine":21,"endColumn":49},{"ruleId":"141","severity":1,"message":"142","line":24,"column":28,"nodeType":"143","messageId":"144","endLine":24,"endColumn":30},{"ruleId":"145","severity":1,"message":"161","line":2,"column":26,"nodeType":"147","messageId":"148","endLine":2,"endColumn":34},{"ruleId":"157","severity":1,"message":"166","line":17,"column":8,"nodeType":"152","endLine":17,"endColumn":10,"suggestions":"167"},{"ruleId":"145","severity":1,"message":"168","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":22},{"ruleId":"145","severity":1,"message":"169","line":2,"column":24,"nodeType":"147","messageId":"148","endLine":2,"endColumn":30},{"ruleId":"145","severity":1,"message":"170","line":2,"column":32,"nodeType":"147","messageId":"148","endLine":2,"endColumn":38},{"ruleId":"145","severity":1,"message":"171","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":13},{"ruleId":"145","severity":1,"message":"172","line":7,"column":19,"nodeType":"147","messageId":"148","endLine":7,"endColumn":27},{"ruleId":"145","severity":1,"message":"173","line":12,"column":12,"nodeType":"147","messageId":"148","endLine":12,"endColumn":16},{"ruleId":"145","severity":1,"message":"174","line":12,"column":18,"nodeType":"147","messageId":"148","endLine":12,"endColumn":25},{"ruleId":"157","severity":1,"message":"175","line":32,"column":8,"nodeType":"152","endLine":32,"endColumn":17,"suggestions":"176"},{"ruleId":"145","severity":1,"message":"177","line":34,"column":13,"nodeType":"147","messageId":"148","endLine":34,"endColumn":17},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Rephrase' is defined but never used.","Identifier","unusedVar","'botName' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","'Other' is defined but never used.","'MoreOptions' is defined but never used.","'loadQuestion' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["180"],"'loadQuestions' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'OtherMore' is defined but never used.","React Hook useEffect has missing dependencies: 'InputQuestion', 'dispatch', and 'howMany'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has missing dependencies: 'InputQuestion' and 'dispatch'. Either include them or remove the dependency array.",["182"],"'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'DGrid' is defined but never used.","'showDocs' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'docID'. Either include them or remove the dependency array.",["183"],"'text' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [dispatch]",{"range":"192","text":"193"},"Update the dependencies array to be: [InputQuestion, dispatch, howMany]",{"range":"194","text":"195"},"Update the dependencies array to be: [InputQuestion, dispatch]",{"range":"196","text":"197"},"Update the dependencies array to be: [dispatch, docFull, docID]",{"range":"198","text":"199"},[578,580],"[dispatch]",[803,805],"[InputQuestion, dispatch, howMany]",[678,680],"[InputQuestion, dispatch]",[872,881],"[dispatch, docFull, docID]"]